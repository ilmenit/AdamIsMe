ca65 V2.18 - Git f75657d
Main file   : common/main.s
Current file: common/main.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.18 - Git f75657d
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.18 - Git f75657d"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank
000000r 1               	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
000000r 1               	.macpack	longbranch
000000r 2               .macro  jeq     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                       bne     *+5
000000r 2                       jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               beq     Target
000000r 2                       .else
000000r 2                               bne     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jne     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bne     Target
000000r 2                       .else
000000r 2                               beq     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jmi     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bmi     Target
000000r 2                       .else
000000r 2                               bpl     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jpl     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bpl     Target
000000r 2                       .else
000000r 2                               bmi     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcs     Target
000000r 2                       .else
000000r 2                               bcc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jcc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bcc     Target
000000r 2                       .else
000000r 2                               bcs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvs     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvs     Target
000000r 2                       .else
000000r 2                               bvc     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               .macro  jvc     Target
000000r 2                       .if     .match(Target, 0)
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .elseif .def(Target) .and .const((*-2)-(Target)) .and ((*+2)-(Target) <= 127)
000000r 2                               bvc     Target
000000r 2                       .else
000000r 2                               bvs     *+5
000000r 2                               jmp     Target
000000r 2                       .endif
000000r 2               .endmacro
000000r 2               
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.import		_memset
000000r 1               	.import		_init_platform
000000r 1               	.import		_audio_music
000000r 1               	.import		_audio_sfx
000000r 1               	.import		_load_game_progress
000000r 1               	.import		_save_game_progress
000000r 1               	.import		_galaxy_draw_screen
000000r 1               	.import		_galaxy_get_action
000000r 1               	.import		_game_lost
000000r 1               	.import		_game_draw_screen
000000r 1               	.export		_init_new_game
000000r 1               	.export		_init_level
000000r 1               	.export		_level_pass
000000r 1               	.import		_set_game_rules
000000r 1               	.import		_handle_you
000000r 1               	.import		_handle_move
000000r 1               	.import		_handle_interactions
000000r 1               	.export		_is_level_complete
000000r 1               	.export		_clear_preprocess_helper
000000r 1               	.import		_load_level
000000r 1               	.importzp	_local_x
000000r 1               	.importzp	_local_y
000000r 1               	.importzp	_local_index
000000r 1               	.importzp	_local_type
000000r 1               	.importzp	_local_temp1
000000r 1               	.importzp	_local_temp2
000000r 1               	.import		_game_phase
000000r 1               	.import		_level_number
000000r 1               	.import		_game_progress
000000r 1               	.import		_objects
000000r 1               	.import		_obj_prop
000000r 1               	.import		_rule_exists
000000r 1               	.import		_map
000000r 1               	.import		_preproc_helper
000000r 1               	.import		_helpers
000000r 1               	.import		_last_obj_index
000000r 1               	.import		_map_lookup
000000r 1               	.import		_obj_prop_lookup
000000r 1               	.import		_one_lshift_lookup
000000r 1               	.export		_planet_data
000000r 1               	.export		_galaxy_display_planet
000000r 1               	.export		_galaxy_takeoff
000000r 1               	.export		_complete_level
000000r 1               	.export		_galaxy_check_trigger
000000r 1               	.export		_galaxy_pass
000000r 1               	.export		_level_loop
000000r 1               	.export		_galaxy_loop
000000r 1               	.export		_game_loop
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"DATA"
000000r 1               
000000r 1               .segment	"BANKDATA"
000000r 1               .segment	"BANKRODATA"
000000r 1               _planet_data:
000000r 1  08           	.byte	$08
000001r 1  08           	.byte	$08
000002r 1  08           	.byte	$08
000003r 1  08           	.byte	$08
000004r 1  08           	.byte	$08
000005r 1  08           	.byte	$08
000006r 1  10           	.byte	$10
000007r 1  11           	.byte	$11
000008r 1  12           	.byte	$12
000009r 1  08           	.byte	$08
00000Ar 1  08           	.byte	$08
00000Br 1  27           	.byte	$27
00000Cr 1  13           	.byte	$13
00000Dr 1  14           	.byte	$14
00000Er 1  08           	.byte	$08
00000Fr 1  08           	.byte	$08
000010r 1  15           	.byte	$15
000011r 1  16           	.byte	$16
000012r 1  17           	.byte	$17
000013r 1  08           	.byte	$08
000014r 1  08           	.byte	$08
000015r 1  08           	.byte	$08
000016r 1  08           	.byte	$08
000017r 1  08           	.byte	$08
000018r 1  08           	.byte	$08
000019r 1               
000019r 1               ; ---------------------------------------------------------------
000019r 1               ; void __near__ init_new_game (void)
000019r 1               ; ---------------------------------------------------------------
000019r 1               
000019r 1               .segment	"BANKCODE"
000000r 1               
000000r 1               .proc	_init_new_game: near
000000r 1               
000000r 1               .segment	"BANKCODE"
000000r 1               
000000r 1               ;
000000r 1               ; level_number = 0;
000000r 1               ;
000000r 1  A9 00        	lda     #$00
000002r 1  8D rr rr     	sta     _level_number
000005r 1               ;
000005r 1               ; memset(&game_progress, 0, sizeof(game_progress));
000005r 1               ;
000005r 1  A0 0D        	ldy     #$0D
000007r 1  99 rr rr     L00F6:	sta     _game_progress,y
00000Ar 1  88           	dey
00000Br 1  10 FA        	bpl     L00F6
00000Dr 1               ;
00000Dr 1               ; game_progress.galaxy_x = 0xFF; // position on the galaxy map
00000Dr 1               ;
00000Dr 1  A9 FF        	lda     #$FF
00000Fr 1  8D rr rr     	sta     _game_progress
000012r 1               ;
000012r 1               ; game_progress.galaxy_y = 0xFF; // position on the galaxy map
000012r 1               ;
000012r 1  8D rr rr     	sta     _game_progress+1
000015r 1               ;
000015r 1               ; game_progress.landed_x = 0xFF; // position on the galaxy map
000015r 1               ;
000015r 1  8D rr rr     	sta     _game_progress+2
000018r 1               ;
000018r 1               ; game_progress.landed_y = 0xFF; // position on the galaxy map
000018r 1               ;
000018r 1  8D rr rr     	sta     _game_progress+3
00001Br 1               ;
00001Br 1               ; }
00001Br 1               ;
00001Br 1  60           	rts
00001Cr 1               
00001Cr 1               .endproc
00001Cr 1               
00001Cr 1               ; ---------------------------------------------------------------
00001Cr 1               ; void __near__ init_level (void)
00001Cr 1               ; ---------------------------------------------------------------
00001Cr 1               
00001Cr 1               .segment	"BANKCODE"
00001Cr 1               
00001Cr 1               .proc	_init_level: near
00001Cr 1               
00001Cr 1               .segment	"BANKCODE"
00001Cr 1               
00001Cr 1               ;
00001Cr 1               ; game_phase = LEVEL_ONGOING;
00001Cr 1               ;
00001Cr 1  A9 01        	lda     #$01
00001Er 1  8D rr rr     	sta     _game_phase
000021r 1               ;
000021r 1               ; helpers.you_move_at_least_once = false;
000021r 1               ;
000021r 1  A9 00        	lda     #$00
000023r 1  8D rr rr     	sta     _helpers+3
000026r 1               ;
000026r 1               ; helpers.rules_may_have_changed = true;
000026r 1               ;
000026r 1  A9 01        	lda     #$01
000028r 1  8D rr rr     	sta     _helpers+4
00002Br 1               ;
00002Br 1               ; set_game_rules(); // on the beginning of level and after move of other objects
00002Br 1               ;
00002Br 1  20 rr rr     	jsr     _set_game_rules
00002Er 1               ;
00002Er 1               ; helpers.rules_may_have_changed = true;
00002Er 1               ;
00002Er 1  A9 01        	lda     #$01
000030r 1  8D rr rr     	sta     _helpers+4
000033r 1               ;
000033r 1               ; helpers.pick_exists_as_object = false;
000033r 1               ;
000033r 1  A9 00        	lda     #$00
000035r 1  8D rr rr     	sta     _helpers
000038r 1               ;
000038r 1               ; for (local_index = 0; local_index < last_obj_index; ++local_index)
000038r 1               ;
000038r 1  85 rr        	sta     _local_index
00003Ar 1  AA           	tax
00003Br 1  A5 rr        L016A:	lda     _local_index
00003Dr 1  CD rr rr     	cmp     _last_obj_index
000040r 1  B0 32        	bcs     L010C
000042r 1               ;
000042r 1               ; if (ObjPropGet(objects.type[local_index], PROP_PICK))
000042r 1               ;
000042r 1  A4 rr        	ldy     _local_index
000044r 1  B9 rr rr     	lda     _objects+480,y
000047r 1  85 rr        	sta     ptr1
000049r 1  8A           	txa
00004Ar 1  18           	clc
00004Br 1  69 rr        	adc     #>(_obj_prop_lookup)
00004Dr 1  85 rr        	sta     ptr1+1
00004Fr 1  A0 rr        	ldy     #<(_obj_prop_lookup)
000051r 1  B1 rr        	lda     (ptr1),y
000053r 1  18           	clc
000054r 1  69 07        	adc     #$07
000056r 1  90 01        	bcc     L011B
000058r 1  E8           	inx
000059r 1  85 rr        L011B:	sta     ptr1
00005Br 1  8A           	txa
00005Cr 1  18           	clc
00005Dr 1  69 rr        	adc     #>(_obj_prop)
00005Fr 1  85 rr        	sta     ptr1+1
000061r 1  A0 rr        	ldy     #<(_obj_prop)
000063r 1  A2 00        	ldx     #$00
000065r 1  B1 rr        	lda     (ptr1),y
000067r 1  F0 06        	beq     L016B
000069r 1               ;
000069r 1               ; helpers.pick_exists_as_object = true;
000069r 1               ;
000069r 1  A9 01        	lda     #$01
00006Br 1  8D rr rr     	sta     _helpers
00006Er 1               ;
00006Er 1               ; break;
00006Er 1               ;
00006Er 1  60           	rts
00006Fr 1               ;
00006Fr 1               ; for (local_index = 0; local_index < last_obj_index; ++local_index)
00006Fr 1               ;
00006Fr 1  E6 rr        L016B:	inc     _local_index
000071r 1  4C rr rr     	jmp     L016A
000074r 1               ;
000074r 1               ; }
000074r 1               ;
000074r 1  60           L010C:	rts
000075r 1               
000075r 1               .endproc
000075r 1               
000075r 1               ; ---------------------------------------------------------------
000075r 1               ; void __near__ level_pass (void)
000075r 1               ; ---------------------------------------------------------------
000075r 1               
000075r 1               .segment	"BANKCODE"
000075r 1               
000075r 1               .proc	_level_pass: near
000075r 1               
000075r 1               .segment	"BANKCODE"
000075r 1               
000075r 1               ;
000075r 1               ; game_draw_screen();
000075r 1               ;
000075r 1  20 rr rr     	jsr     _game_draw_screen
000078r 1               ;
000078r 1               ; helpers.something_transformed = false;
000078r 1               ;
000078r 1  A9 00        	lda     #$00
00007Ar 1  8D rr rr     	sta     _helpers+7
00007Dr 1               ;
00007Dr 1               ; helpers.something_exploded = false;
00007Dr 1               ;
00007Dr 1  8D rr rr     	sta     _helpers+6
000080r 1               ;
000080r 1               ; set_game_rules(); // on the beginning of level and after move of other objects
000080r 1               ;
000080r 1  20 rr rr     	jsr     _set_game_rules
000083r 1               ;
000083r 1               ; for (local_index = 0; local_index < last_obj_index; ++local_index)
000083r 1               ;
000083r 1  A9 00        	lda     #$00
000085r 1  85 rr        	sta     _local_index
000087r 1  AA           	tax
000088r 1  A5 rr        L016E:	lda     _local_index
00008Ar 1  CD rr rr     	cmp     _last_obj_index
00008Dr 1  8A           	txa
00008Er 1  E9 00        	sbc     #$00
000090r 1  B0 2F        	bcs     L0170
000092r 1               ;
000092r 1               ; if (IS_KILLED(local_index))
000092r 1               ;
000092r 1  A4 rr        	ldy     _local_index
000094r 1  B9 rr rr     	lda     _objects+960,y
000097r 1  29 08        	and     #$08
000099r 1               ;
000099r 1               ; continue;
000099r 1               ;
000099r 1  D0 21        	bne     L016F
00009Br 1               ;
00009Br 1               ; if (ObjPropGet(objects.type[local_index], PROP_YOU))
00009Br 1               ;
00009Br 1  A4 rr        	ldy     _local_index
00009Dr 1  B9 rr rr     	lda     _objects+480,y
0000A0r 1  85 rr        	sta     ptr1
0000A2r 1  A9 00        	lda     #$00
0000A4r 1  18           	clc
0000A5r 1  69 rr        	adc     #>(_obj_prop_lookup)
0000A7r 1  85 rr        	sta     ptr1+1
0000A9r 1  A0 rr        	ldy     #<(_obj_prop_lookup)
0000ABr 1  B1 rr        	lda     (ptr1),y
0000ADr 1  85 rr        	sta     ptr1
0000AFr 1  A9 00        	lda     #$00
0000B1r 1  18           	clc
0000B2r 1  69 rr        	adc     #>(_obj_prop)
0000B4r 1  85 rr        	sta     ptr1+1
0000B6r 1  A0 rr        	ldy     #<(_obj_prop)
0000B8r 1  B1 rr        	lda     (ptr1),y
0000BAr 1               ;
0000BAr 1               ; break;
0000BAr 1               ;
0000BAr 1  D0 05        	bne     L0170
0000BCr 1               ;
0000BCr 1               ; for (local_index = 0; local_index < last_obj_index; ++local_index)
0000BCr 1               ;
0000BCr 1  E6 rr        L016F:	inc     _local_index
0000BEr 1  4C rr rr     	jmp     L016E
0000C1r 1               ;
0000C1r 1               ; if (local_index == last_obj_index)
0000C1r 1               ;
0000C1r 1  AD rr rr     L0170:	lda     _last_obj_index
0000C4r 1  C5 rr        	cmp     _local_index
0000C6r 1  D0 06        	bne     L00D3
0000C8r 1               ;
0000C8r 1               ; game_phase = LEVEL_LOST;
0000C8r 1               ;
0000C8r 1  A9 03        	lda     #$03
0000CAr 1  8D rr rr     	sta     _game_phase
0000CDr 1               ;
0000CDr 1               ; return;
0000CDr 1               ;
0000CDr 1  60           	rts
0000CEr 1               ;
0000CEr 1               ; handle_you();
0000CEr 1               ;
0000CEr 1  20 rr rr     L00D3:	jsr     _handle_you
0000D1r 1               ;
0000D1r 1               ; set_game_rules();
0000D1r 1               ;
0000D1r 1  20 rr rr     	jsr     _set_game_rules
0000D4r 1               ;
0000D4r 1               ; if (rule_exists[PROP_MOVE] || (rule_exists[PROP_MAGNET] && rule_exists[PROP_IRON]))
0000D4r 1               ;
0000D4r 1  AD rr rr     	lda     _rule_exists+9
0000D7r 1  D0 0A        	bne     L0174
0000D9r 1  AD rr rr     	lda     _rule_exists+14
0000DCr 1  F0 0B        	beq     L00D9
0000DEr 1  AD rr rr     	lda     _rule_exists+13
0000E1r 1  F0 06        	beq     L00D9
0000E3r 1               ;
0000E3r 1               ; handle_move();
0000E3r 1               ;
0000E3r 1  20 rr rr     L0174:	jsr     _handle_move
0000E6r 1               ;
0000E6r 1               ; set_game_rules(); // after move of other objects
0000E6r 1               ;
0000E6r 1  20 rr rr     	jsr     _set_game_rules
0000E9r 1               ;
0000E9r 1               ; handle_interactions();
0000E9r 1               ;
0000E9r 1  20 rr rr     L00D9:	jsr     _handle_interactions
0000ECr 1               ;
0000ECr 1               ; if (helpers.something_transformed)
0000ECr 1               ;
0000ECr 1  AD rr rr     	lda     _helpers+7
0000EFr 1  F0 05        	beq     L00E5
0000F1r 1               ;
0000F1r 1               ; audio_sfx(SFX_TRANSFORM);
0000F1r 1               ;
0000F1r 1  A9 0D        	lda     #$0D
0000F3r 1  4C rr rr     	jmp     _audio_sfx
0000F6r 1               ;
0000F6r 1               ; else if (helpers.something_exploded)
0000F6r 1               ;
0000F6r 1  AD rr rr     L00E5:	lda     _helpers+6
0000F9r 1  F0 05        	beq     L00EA
0000FBr 1               ;
0000FBr 1               ; audio_sfx(SFX_BOOM); // replace with better sound for changing object type?
0000FBr 1               ;
0000FBr 1  A9 0B        	lda     #$0B
0000FDr 1  4C rr rr     	jmp     _audio_sfx
000100r 1               ;
000100r 1               ; }
000100r 1               ;
000100r 1  60           L00EA:	rts
000101r 1               
000101r 1               .endproc
000101r 1               
000101r 1               ; ---------------------------------------------------------------
000101r 1               ; unsigned char __near__ is_level_complete (void)
000101r 1               ; ---------------------------------------------------------------
000101r 1               
000101r 1               .segment	"BANKCODE"
000101r 1               
000101r 1               .proc	_is_level_complete: near
000101r 1               
000101r 1               .segment	"BANKCODE"
000101r 1               
000101r 1               ;
000101r 1               ; return game_progress.worlds_state[local_temp1] & (one_lshift_lookup[local_temp2]);
000101r 1               ;
000101r 1  A4 rr        	ldy     _local_temp1
000103r 1  B9 rr rr     	lda     _game_progress+6,y
000106r 1  20 rr rr     	jsr     pusha0
000109r 1  A5 rr        	lda     _local_temp2
00010Br 1  0A           	asl     a
00010Cr 1  90 03        	bcc     L0176
00010Er 1  A2 01        	ldx     #$01
000110r 1  18           	clc
000111r 1  69 rr        L0176:	adc     #<(_one_lshift_lookup)
000113r 1  85 rr        	sta     ptr1
000115r 1  8A           	txa
000116r 1  69 rr        	adc     #>(_one_lshift_lookup)
000118r 1  85 rr        	sta     ptr1+1
00011Ar 1  A0 01        	ldy     #$01
00011Cr 1  B1 rr        	lda     (ptr1),y
00011Er 1  AA           	tax
00011Fr 1  88           	dey
000120r 1  B1 rr        	lda     (ptr1),y
000122r 1  20 rr rr     	jsr     tosandax
000125r 1  A2 00        	ldx     #$00
000127r 1               ;
000127r 1               ; }
000127r 1               ;
000127r 1  60           	rts
000128r 1               
000128r 1               .endproc
000128r 1               
000128r 1               ; ---------------------------------------------------------------
000128r 1               ; void __near__ clear_preprocess_helper (void)
000128r 1               ; ---------------------------------------------------------------
000128r 1               
000128r 1               .segment	"BANKCODE"
000128r 1               
000128r 1               .proc	_clear_preprocess_helper: near
000128r 1               
000128r 1               .segment	"BANKCODE"
000128r 1               
000128r 1               ;
000128r 1               ; memset(&preproc_helper, 0, sizeof(preproc_helper));
000128r 1               ;
000128r 1  A0 1F        	ldy     #$1F
00012Ar 1  A9 00        	lda     #$00
00012Cr 1  99 rr rr     L0048:	sta     _preproc_helper,y
00012Fr 1  88           	dey
000130r 1  10 FA        	bpl     L0048
000132r 1               ;
000132r 1               ; }
000132r 1               ;
000132r 1  60           	rts
000133r 1               
000133r 1               .endproc
000133r 1               
000133r 1               ; ---------------------------------------------------------------
000133r 1               ; void __near__ galaxy_display_planet (void)
000133r 1               ; ---------------------------------------------------------------
000133r 1               
000133r 1               .segment	"BANKCODE"
000133r 1               
000133r 1               .proc	_galaxy_display_planet: near
000133r 1               
000133r 1               .segment	"BANKCODE"
000133r 1               
000133r 1               ;
000133r 1               ; for (local_y = 0; local_y < PLANET_DATA_Y; ++local_y)
000133r 1               ;
000133r 1  A9 00        	lda     #$00
000135r 1  85 rr        	sta     _local_y
000137r 1  A5 rr        L017C:	lda     _local_y
000139r 1  C9 05        	cmp     #$05
00013Br 1  90 01        	bcc     L0183
00013Dr 1               ;
00013Dr 1               ; }
00013Dr 1               ;
00013Dr 1  60           	rts
00013Er 1               ;
00013Er 1               ; for (local_x = 0; local_x < PLANET_DATA_X; ++local_x)
00013Er 1               ;
00013Er 1  A9 00        L0183:	lda     #$00
000140r 1  85 rr        	sta     _local_x
000142r 1  A5 rr        L017D:	lda     _local_x
000144r 1  C9 05        	cmp     #$05
000146r 1  90 03 4C rr  	jcs     L0182
00014Ar 1  rr           
00014Br 1               ;
00014Br 1               ; local_type = planet_data[local_y * PLANET_DATA_X + local_x];
00014Br 1               ;
00014Br 1  A2 00        	ldx     #$00
00014Dr 1  A5 rr        	lda     _local_y
00014Fr 1  20 rr rr     	jsr     mulax5
000152r 1  18           	clc
000153r 1  65 rr        	adc     _local_x
000155r 1  90 01        	bcc     L0177
000157r 1  E8           	inx
000158r 1  85 rr        L0177:	sta     ptr1
00015Ar 1  8A           	txa
00015Br 1  18           	clc
00015Cr 1  69 rr        	adc     #>(_planet_data)
00015Er 1  85 rr        	sta     ptr1+1
000160r 1  A0 rr        	ldy     #<(_planet_data)
000162r 1  B1 rr        	lda     (ptr1),y
000164r 1  85 rr        	sta     _local_type
000166r 1               ;
000166r 1               ; if (local_type >= DECODE_WALLS_MIN && local_type < DECODE_WALLS_MAX)
000166r 1               ;
000166r 1  C9 08        	cmp     #$08
000168r 1  A2 00        	ldx     #$00
00016Ar 1  90 0E        	bcc     L0181
00016Cr 1  A5 rr        	lda     _local_type
00016Er 1  C9 10        	cmp     #$10
000170r 1  B0 08        	bcs     L0181
000172r 1               ;
000172r 1               ; local_type += game_progress.landed_on_world_number;
000172r 1               ;
000172r 1  AD rr rr     	lda     _game_progress+5
000175r 1  18           	clc
000176r 1  65 rr        	adc     _local_type
000178r 1  85 rr        	sta     _local_type
00017Ar 1               ;
00017Ar 1               ; MapSet(game_progress.landed_x + local_x - 1, game_progress.landed_y + local_y - 2, local_type);
00017Ar 1               ;
00017Ar 1  AD rr rr     L0181:	lda     _game_progress+2
00017Dr 1  18           	clc
00017Er 1  65 rr        	adc     _local_x
000180r 1  90 01        	bcc     L0178
000182r 1  E8           	inx
000183r 1  38           L0178:	sec
000184r 1  E9 01        	sbc     #$01
000186r 1  B0 01        	bcs     L0066
000188r 1  CA           	dex
000189r 1  85 rr        L0066:	sta     sreg
00018Br 1  86 rr        	stx     sreg+1
00018Dr 1  A2 00        	ldx     #$00
00018Fr 1  AD rr rr     	lda     _game_progress+3
000192r 1  18           	clc
000193r 1  65 rr        	adc     _local_y
000195r 1  90 01        	bcc     L0179
000197r 1  E8           	inx
000198r 1  38           L0179:	sec
000199r 1  E9 02        	sbc     #$02
00019Br 1  B0 01        	bcs     L0069
00019Dr 1  CA           	dex
00019Er 1  85 rr        L0069:	sta     ptr1
0001A0r 1  8A           	txa
0001A1r 1  18           	clc
0001A2r 1  69 rr        	adc     #>(_map_lookup)
0001A4r 1  85 rr        	sta     ptr1+1
0001A6r 1  A0 rr        	ldy     #<(_map_lookup)
0001A8r 1  B1 rr        	lda     (ptr1),y
0001AAr 1  18           	clc
0001ABr 1  65 rr        	adc     sreg
0001ADr 1  A6 rr        	ldx     sreg+1
0001AFr 1  90 02        	bcc     L017B
0001B1r 1  E8           	inx
0001B2r 1  18           	clc
0001B3r 1  69 rr        L017B:	adc     #<(_map)
0001B5r 1  85 rr        	sta     ptr1
0001B7r 1  8A           	txa
0001B8r 1  69 rr        	adc     #>(_map)
0001BAr 1  85 rr        	sta     ptr1+1
0001BCr 1  A5 rr        	lda     _local_type
0001BEr 1  A0 00        	ldy     #$00
0001C0r 1  91 rr        	sta     (ptr1),y
0001C2r 1               ;
0001C2r 1               ; for (local_x = 0; local_x < PLANET_DATA_X; ++local_x)
0001C2r 1               ;
0001C2r 1  E6 rr        	inc     _local_x
0001C4r 1  4C rr rr     	jmp     L017D
0001C7r 1               ;
0001C7r 1               ; for (local_y = 0; local_y < PLANET_DATA_Y; ++local_y)
0001C7r 1               ;
0001C7r 1  E6 rr        L0182:	inc     _local_y
0001C9r 1  4C rr rr     	jmp     L017C
0001CCr 1               
0001CCr 1               .endproc
0001CCr 1               
0001CCr 1               ; ---------------------------------------------------------------
0001CCr 1               ; void __near__ galaxy_takeoff (void)
0001CCr 1               ; ---------------------------------------------------------------
0001CCr 1               
0001CCr 1               .segment	"BANKCODE"
0001CCr 1               
0001CCr 1               .proc	_galaxy_takeoff: near
0001CCr 1               
0001CCr 1               .segment	"BANKCODE"
0001CCr 1               
0001CCr 1               ;
0001CCr 1               ; save_game_progress();
0001CCr 1               ;
0001CCr 1  20 rr rr     	jsr     _save_game_progress
0001CFr 1               ;
0001CFr 1               ; load_level();
0001CFr 1               ;
0001CFr 1  20 rr rr     	jsr     _load_level
0001D2r 1               ;
0001D2r 1               ; audio_music(MUSIC_GALAXY);
0001D2r 1               ;
0001D2r 1  A9 01        	lda     #$01
0001D4r 1  20 rr rr     	jsr     _audio_music
0001D7r 1               ;
0001D7r 1               ; audio_sfx(SFX_TAKE_OFF);
0001D7r 1               ;
0001D7r 1  A9 05        	lda     #$05
0001D9r 1  4C rr rr     	jmp     _audio_sfx
0001DCr 1               
0001DCr 1               .endproc
0001DCr 1               
0001DCr 1               ; ---------------------------------------------------------------
0001DCr 1               ; void __near__ complete_level (void)
0001DCr 1               ; ---------------------------------------------------------------
0001DCr 1               
0001DCr 1               .segment	"BANKCODE"
0001DCr 1               
0001DCr 1               .proc	_complete_level: near
0001DCr 1               
0001DCr 1               .segment	"BANKCODE"
0001DCr 1               
0001DCr 1               ;
0001DCr 1               ; local_temp1 = level_number / LEVELS_PER_WORLD;
0001DCr 1               ;
0001DCr 1  AD rr rr     	lda     _level_number
0001DFr 1  4A           	lsr     a
0001E0r 1  4A           	lsr     a
0001E1r 1  4A           	lsr     a
0001E2r 1  85 rr        	sta     _local_temp1
0001E4r 1               ;
0001E4r 1               ; local_temp2 = level_number % LEVELS_PER_WORLD;
0001E4r 1               ;
0001E4r 1  AD rr rr     	lda     _level_number
0001E7r 1  29 07        	and     #$07
0001E9r 1  85 rr        	sta     _local_temp2
0001EBr 1               ;
0001EBr 1               ; if (!is_level_complete())
0001EBr 1               ;
0001EBr 1  20 rr rr     	jsr     _is_level_complete
0001EEr 1  AA           	tax
0001EFr 1  D0 3C        	bne     L007E
0001F1r 1               ;
0001F1r 1               ; game_progress.worlds_state[local_temp1] |= one_lshift_lookup[local_temp2];
0001F1r 1               ;
0001F1r 1  A9 rr        	lda     #<(_game_progress+6)
0001F3r 1  A2 rr        	ldx     #>(_game_progress+6)
0001F5r 1  18           	clc
0001F6r 1  65 rr        	adc     _local_temp1
0001F8r 1  90 01        	bcc     L0082
0001FAr 1  E8           	inx
0001FBr 1  20 rr rr     L0082:	jsr     pushax
0001FEr 1  85 rr        	sta     ptr1
000200r 1  86 rr        	stx     ptr1+1
000202r 1  A2 00        	ldx     #$00
000204r 1  A1 rr        	lda     (ptr1,x)
000206r 1  20 rr rr     	jsr     pusha0
000209r 1  A5 rr        	lda     _local_temp2
00020Br 1  0A           	asl     a
00020Cr 1  90 03        	bcc     L0185
00020Er 1  A2 01        	ldx     #$01
000210r 1  18           	clc
000211r 1  69 rr        L0185:	adc     #<(_one_lshift_lookup)
000213r 1  85 rr        	sta     ptr1
000215r 1  8A           	txa
000216r 1  69 rr        	adc     #>(_one_lshift_lookup)
000218r 1  85 rr        	sta     ptr1+1
00021Ar 1  A0 01        	ldy     #$01
00021Cr 1  B1 rr        	lda     (ptr1),y
00021Er 1  AA           	tax
00021Fr 1  88           	dey
000220r 1  B1 rr        	lda     (ptr1),y
000222r 1  20 rr rr     	jsr     tosorax
000225r 1  A0 00        	ldy     #$00
000227r 1  20 rr rr     	jsr     staspidx
00022Ar 1               ;
00022Ar 1               ; ++game_progress.completed_levels;
00022Ar 1               ;
00022Ar 1  EE rr rr     	inc     _game_progress+4
00022Dr 1               ;
00022Dr 1               ; }
00022Dr 1               ;
00022Dr 1  60           L007E:	rts
00022Er 1               
00022Er 1               .endproc
00022Er 1               
00022Er 1               ; ---------------------------------------------------------------
00022Er 1               ; void __near__ galaxy_check_trigger (void)
00022Er 1               ; ---------------------------------------------------------------
00022Er 1               
00022Er 1               .segment	"BANKCODE"
00022Er 1               
00022Er 1               .proc	_galaxy_check_trigger: near
00022Er 1               
00022Er 1               .segment	"BANKCODE"
00022Er 1               
00022Er 1               ;
00022Er 1               ; local_type = MapGet(game_progress.galaxy_x, game_progress.galaxy_y);
00022Er 1               ;
00022Er 1  AC rr rr     	ldy     _game_progress+1
000231r 1  A2 00        	ldx     #$00
000233r 1  B9 rr rr     	lda     _map_lookup,y
000236r 1  18           	clc
000237r 1  6D rr rr     	adc     _game_progress
00023Ar 1  90 01        	bcc     L0186
00023Cr 1  E8           	inx
00023Dr 1  85 rr        L0186:	sta     ptr1
00023Fr 1  8A           	txa
000240r 1  18           	clc
000241r 1  69 rr        	adc     #>(_map)
000243r 1  85 rr        	sta     ptr1+1
000245r 1  A0 rr        	ldy     #<(_map)
000247r 1  B1 rr        	lda     (ptr1),y
000249r 1  85 rr        	sta     _local_type
00024Br 1               ;
00024Br 1               ; if (game_phase == GALAXY_TRIGGER)
00024Br 1               ;
00024Br 1  AD rr rr     	lda     _game_phase
00024Er 1  C9 08        	cmp     #$08
000250r 1  D0 34        	bne     L018C
000252r 1               ;
000252r 1               ; if (local_type == DECODE_SHUTTLE_LANDED)
000252r 1               ;
000252r 1  A5 rr        	lda     _local_type
000254r 1  C9 27        	cmp     #$27
000256r 1  D0 0D        	bne     L0188
000258r 1               ;
000258r 1               ; game_phase = GALAXY_ONGOING;
000258r 1               ;
000258r 1  A9 06        	lda     #$06
00025Ar 1  8D rr rr     	sta     _game_phase
00025Dr 1               ;
00025Dr 1               ; game_progress.landed_on_world_number = SHUTTLE_IN_SPACE;
00025Dr 1               ;
00025Dr 1  A9 FF        	lda     #$FF
00025Fr 1  8D rr rr     	sta     _game_progress+5
000262r 1               ;
000262r 1               ; galaxy_takeoff();
000262r 1               ;
000262r 1  4C rr rr     	jmp     _galaxy_takeoff
000265r 1               ;
000265r 1               ; else if (local_type >= DECODE_LEVEL_NUMBERS_MIN && local_type < DECODE_LEVEL_NUMBERS_MAX)
000265r 1               ;
000265r 1  A5 rr        L0188:	lda     _local_type
000267r 1  C9 10        	cmp     #$10
000269r 1  90 1A        	bcc     L0098
00026Br 1  C9 18        	cmp     #$18
00026Dr 1  B0 16        	bcs     L0098
00026Fr 1               ;
00026Fr 1               ; local_temp1 = local_type - DECODE_LEVEL_NUMBERS_MIN;
00026Fr 1               ;
00026Fr 1  38           	sec
000270r 1  E9 10        	sbc     #$10
000272r 1  85 rr        	sta     _local_temp1
000274r 1               ;
000274r 1               ; level_number = local_temp1 + game_progress.landed_on_world_number * LEVELS_PER_WORLD;
000274r 1               ;
000274r 1  AD rr rr     	lda     _game_progress+5
000277r 1  0A           	asl     a
000278r 1  0A           	asl     a
000279r 1  0A           	asl     a
00027Ar 1  18           	clc
00027Br 1  65 rr        	adc     _local_temp1
00027Dr 1  8D rr rr     	sta     _level_number
000280r 1               ;
000280r 1               ; game_phase = LEVEL_LOAD;
000280r 1               ;
000280r 1  A9 04        	lda     #$04
000282r 1  8D rr rr     	sta     _game_phase
000285r 1               ;
000285r 1               ; else if (game_phase == GALAXY_ONGOING)
000285r 1               ;
000285r 1  60           L0098:	rts
000286r 1  AD rr rr     L018C:	lda     _game_phase
000289r 1  C9 06        	cmp     #$06
00028Br 1  D0 20        	bne     L00A6
00028Dr 1               ;
00028Dr 1               ; if (local_type >= DECODE_WORLDS_MIN && local_type < DECODE_WORLDS_MAX)
00028Dr 1               ;
00028Dr 1  A5 rr        	lda     _local_type
00028Fr 1  C9 08        	cmp     #$08
000291r 1  90 01        	bcc     L018D
000293r 1  60           	rts
000294r 1               ;
000294r 1               ; game_progress.landed_on_world_number = local_type - DECODE_WORLDS_MIN;
000294r 1               ;
000294r 1  A5 rr        L018D:	lda     _local_type
000296r 1  8D rr rr     	sta     _game_progress+5
000299r 1               ;
000299r 1               ; game_progress.landed_x = game_progress.galaxy_x;
000299r 1               ;
000299r 1  AD rr rr     	lda     _game_progress
00029Cr 1  8D rr rr     	sta     _game_progress+2
00029Fr 1               ;
00029Fr 1               ; game_progress.landed_y = game_progress.galaxy_y;
00029Fr 1               ;
00029Fr 1  AD rr rr     	lda     _game_progress+1
0002A2r 1  8D rr rr     	sta     _game_progress+3
0002A5r 1               ;
0002A5r 1               ; audio_sfx(SFX_LANDING);
0002A5r 1               ;
0002A5r 1  A9 04        	lda     #$04
0002A7r 1  20 rr rr     	jsr     _audio_sfx
0002AAr 1               ;
0002AAr 1               ; galaxy_display_planet();
0002AAr 1               ;
0002AAr 1  4C rr rr     	jmp     _galaxy_display_planet
0002ADr 1               ;
0002ADr 1               ; }
0002ADr 1               ;
0002ADr 1  60           L00A6:	rts
0002AEr 1               
0002AEr 1               .endproc
0002AEr 1               
0002AEr 1               ; ---------------------------------------------------------------
0002AEr 1               ; void __near__ galaxy_pass (void)
0002AEr 1               ; ---------------------------------------------------------------
0002AEr 1               
0002AEr 1               .segment	"BANKCODE"
0002AEr 1               
0002AEr 1               .proc	_galaxy_pass: near
0002AEr 1               
0002AEr 1               .segment	"BANKCODE"
0002AEr 1               
0002AEr 1               ;
0002AEr 1               ; galaxy_draw_screen();
0002AEr 1               ;
0002AEr 1  20 rr rr     	jsr     _galaxy_draw_screen
0002B1r 1               ;
0002B1r 1               ; galaxy_get_action();
0002B1r 1               ;
0002B1r 1  20 rr rr     	jsr     _galaxy_get_action
0002B4r 1               ;
0002B4r 1               ; galaxy_check_trigger();
0002B4r 1               ;
0002B4r 1  4C rr rr     	jmp     _galaxy_check_trigger
0002B7r 1               
0002B7r 1               .endproc
0002B7r 1               
0002B7r 1               ; ---------------------------------------------------------------
0002B7r 1               ; void __near__ level_loop (void)
0002B7r 1               ; ---------------------------------------------------------------
0002B7r 1               
0002B7r 1               .segment	"BANKCODE"
0002B7r 1               
0002B7r 1               .proc	_level_loop: near
0002B7r 1               
0002B7r 1               .segment	"BANKCODE"
0002B7r 1               
0002B7r 1               ;
0002B7r 1               ; while (game_phase == LEVEL_LOAD || game_phase == LEVEL_ONGOING)
0002B7r 1               ;
0002B7r 1  4C rr rr     	jmp     L0193
0002BAr 1               ;
0002BAr 1               ; if (game_phase == LEVEL_LOAD)
0002BAr 1               ;
0002BAr 1  AD rr rr     L018F:	lda     _game_phase
0002BDr 1  C9 04        	cmp     #$04
0002BFr 1  D0 1D        	bne     L0190
0002C1r 1               ;
0002C1r 1               ; load_level();
0002C1r 1               ;
0002C1r 1  20 rr rr     	jsr     _load_level
0002C4r 1               ;
0002C4r 1               ; init_level();
0002C4r 1               ;
0002C4r 1  20 rr rr     	jsr     _init_level
0002C7r 1               ;
0002C7r 1               ; audio_music(MUSIC_LEVEL_1 + game_progress.landed_on_world_number % MUSIC_LEVEL_MAX);
0002C7r 1               ;
0002C7r 1  AD rr rr     	lda     _game_progress+5
0002CAr 1  20 rr rr     	jsr     pusha0
0002CDr 1  A9 03        	lda     #$03
0002CFr 1  20 rr rr     	jsr     tosumoda0
0002D2r 1  18           	clc
0002D3r 1  69 02        	adc     #$02
0002D5r 1  20 rr rr     	jsr     _audio_music
0002D8r 1               ;
0002D8r 1               ; while (game_phase == LEVEL_ONGOING)
0002D8r 1               ;
0002D8r 1  4C rr rr     	jmp     L0190
0002DBr 1               ;
0002DBr 1               ; level_pass();
0002DBr 1               ;
0002DBr 1  20 rr rr     L012B:	jsr     _level_pass
0002DEr 1               ;
0002DEr 1               ; while (game_phase == LEVEL_ONGOING)
0002DEr 1               ;
0002DEr 1  AD rr rr     L0190:	lda     _game_phase
0002E1r 1  C9 01        	cmp     #$01
0002E3r 1  F0 F6        	beq     L012B
0002E5r 1               ;
0002E5r 1               ; if (game_phase == LEVEL_WON)
0002E5r 1               ;
0002E5r 1  C9 02        	cmp     #$02
0002E7r 1  D0 09        	bne     L0191
0002E9r 1               ;
0002E9r 1               ; audio_sfx(SFX_LEVEL_WON);
0002E9r 1               ;
0002E9r 1  20 rr rr     	jsr     _audio_sfx
0002ECr 1               ;
0002ECr 1               ; complete_level();
0002ECr 1               ;
0002ECr 1  20 rr rr     	jsr     _complete_level
0002EFr 1               ;
0002EFr 1               ; else if (game_phase == LEVEL_LOST)
0002EFr 1               ;
0002EFr 1  4C rr rr     	jmp     L0193
0002F2r 1  AD rr rr     L0191:	lda     _game_phase
0002F5r 1  C9 03        	cmp     #$03
0002F7r 1  D0 1A        	bne     L0193
0002F9r 1               ;
0002F9r 1               ; if (helpers.you_move_at_least_once)
0002F9r 1               ;
0002F9r 1  AD rr rr     	lda     _helpers+3
0002FCr 1  F0 10        	beq     L0192
0002FEr 1               ;
0002FEr 1               ; audio_sfx(SFX_LEVEL_LOST);
0002FEr 1               ;
0002FEr 1  A9 03        	lda     #$03
000300r 1  20 rr rr     	jsr     _audio_sfx
000303r 1               ;
000303r 1               ; game_phase = LEVEL_LOAD;
000303r 1               ;
000303r 1  A9 04        	lda     #$04
000305r 1  8D rr rr     	sta     _game_phase
000308r 1               ;
000308r 1               ; game_lost();
000308r 1               ;
000308r 1  20 rr rr     	jsr     _game_lost
00030Br 1               ;
00030Br 1               ; else
00030Br 1               ;
00030Br 1  4C rr rr     	jmp     L0193
00030Er 1               ;
00030Er 1               ; game_phase = LEVEL_QUIT;
00030Er 1               ;
00030Er 1  A9 05        L0192:	lda     #$05
000310r 1  8D rr rr     	sta     _game_phase
000313r 1               ;
000313r 1               ; while (game_phase == LEVEL_LOAD || game_phase == LEVEL_ONGOING)
000313r 1               ;
000313r 1  AD rr rr     L0193:	lda     _game_phase
000316r 1  C9 04        	cmp     #$04
000318r 1  F0 A0        	beq     L018F
00031Ar 1  C9 01        	cmp     #$01
00031Cr 1  F0 9C        	beq     L018F
00031Er 1  60           	rts
00031Fr 1               
00031Fr 1               .endproc
00031Fr 1               
00031Fr 1               ; ---------------------------------------------------------------
00031Fr 1               ; void __near__ galaxy_loop (void)
00031Fr 1               ; ---------------------------------------------------------------
00031Fr 1               
00031Fr 1               .segment	"BANKCODE"
00031Fr 1               
00031Fr 1               .proc	_galaxy_loop: near
00031Fr 1               
00031Fr 1               .segment	"BANKCODE"
00031Fr 1               
00031Fr 1               ;
00031Fr 1               ; level_number = LEVEL_GALAXY;
00031Fr 1               ;
00031Fr 1  A9 40        	lda     #$40
000321r 1  8D rr rr     	sta     _level_number
000324r 1               ;
000324r 1               ; load_level();
000324r 1               ;
000324r 1  20 rr rr     	jsr     _load_level
000327r 1               ;
000327r 1               ; if (game_progress.landed_on_world_number != SHUTTLE_IN_SPACE)
000327r 1               ;
000327r 1  AD rr rr     	lda     _game_progress+5
00032Ar 1  C9 FF        	cmp     #$FF
00032Cr 1  F0 06        	beq     L0149
00032Er 1               ;
00032Er 1               ; galaxy_display_planet();
00032Er 1               ;
00032Er 1  20 rr rr     	jsr     _galaxy_display_planet
000331r 1               ;
000331r 1               ; else
000331r 1               ;
000331r 1  4C rr rr     	jmp     L014C
000334r 1               ;
000334r 1               ; audio_music(MUSIC_GALAXY);
000334r 1               ;
000334r 1  A9 01        L0149:	lda     #$01
000336r 1  20 rr rr     	jsr     _audio_music
000339r 1               ;
000339r 1               ; game_phase = GALAXY_ONGOING;
000339r 1               ;
000339r 1  A9 06        L014C:	lda     #$06
00033Br 1  8D rr rr     	sta     _game_phase
00033Er 1               ;
00033Er 1               ; while (game_phase == GALAXY_ONGOING)
00033Er 1               ;
00033Er 1  4C rr rr     	jmp     L0196
000341r 1               ;
000341r 1               ; galaxy_pass();
000341r 1               ;
000341r 1  20 rr rr     L0151:	jsr     _galaxy_pass
000344r 1               ;
000344r 1               ; while (game_phase == GALAXY_ONGOING)
000344r 1               ;
000344r 1  AD rr rr     L0196:	lda     _game_phase
000347r 1  C9 06        	cmp     #$06
000349r 1  F0 F6        	beq     L0151
00034Br 1               ;
00034Br 1               ; }
00034Br 1               ;
00034Br 1  60           	rts
00034Cr 1               
00034Cr 1               .endproc
00034Cr 1               
00034Cr 1               ; ---------------------------------------------------------------
00034Cr 1               ; void __near__ game_loop (void)
00034Cr 1               ; ---------------------------------------------------------------
00034Cr 1               
00034Cr 1               .segment	"BANKCODE"
00034Cr 1               
00034Cr 1               .proc	_game_loop: near
00034Cr 1               
00034Cr 1               .segment	"BANKCODE"
00034Cr 1               
00034Cr 1               ;
00034Cr 1               ; galaxy_loop();
00034Cr 1               ;
00034Cr 1  20 rr rr     L015A:	jsr     _galaxy_loop
00034Fr 1               ;
00034Fr 1               ; level_loop();
00034Fr 1               ;
00034Fr 1  20 rr rr     	jsr     _level_loop
000352r 1               ;
000352r 1               ; }
000352r 1               ;
000352r 1  4C rr rr     	jmp     L015A
000355r 1               
000355r 1               .endproc
000355r 1               
000355r 1               ; ---------------------------------------------------------------
000355r 1               ; int __near__ main (void)
000355r 1               ; ---------------------------------------------------------------
000355r 1               
000355r 1               .segment	"BANKCODE"
000355r 1               
000355r 1               .proc	_main: near
000355r 1               
000355r 1               .segment	"BANKCODE"
000355r 1               
000355r 1               ;
000355r 1               ; init_platform();
000355r 1               ;
000355r 1  20 rr rr     	jsr     _init_platform
000358r 1               ;
000358r 1               ; if (!load_game_progress())
000358r 1               ;
000358r 1  20 rr rr     	jsr     _load_game_progress
00035Br 1  AA           	tax
00035Cr 1  D0 03        	bne     L015F
00035Er 1               ;
00035Er 1               ; init_new_game();
00035Er 1               ;
00035Er 1  20 rr rr     	jsr     _init_new_game
000361r 1               ;
000361r 1               ; game_progress.landed_on_world_number = SHUTTLE_IN_SPACE;
000361r 1               ;
000361r 1  A9 FF        L015F:	lda     #$FF
000363r 1  8D rr rr     	sta     _game_progress+5
000366r 1               ;
000366r 1               ; game_phase = LEVEL_LOAD;
000366r 1               ;
000366r 1  A9 04        	lda     #$04
000368r 1  8D rr rr     	sta     _game_phase
00036Br 1               ;
00036Br 1               ; game_loop();
00036Br 1               ;
00036Br 1  20 rr rr     	jsr     _game_loop
00036Er 1               ;
00036Er 1               ; audio_music(MUSIC_DISABLED);
00036Er 1               ;
00036Er 1  A9 00        	lda     #$00
000370r 1  20 rr rr     	jsr     _audio_music
000373r 1               ;
000373r 1               ; return EXIT_SUCCESS;
000373r 1               ;
000373r 1  A2 00        	ldx     #$00
000375r 1  8A           	txa
000376r 1               ;
000376r 1               ; }
000376r 1               ;
000376r 1  60           	rts
000377r 1               
000377r 1               .endproc
000377r 1               
000377r 1               
