;
; File generated by cc65 v 2.18 - Git f75657d
;
	.fopt		compiler,"cc65 v 2.18 - Git f75657d"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_memset
	.import		_init_platform
	.import		_audio_music
	.import		_audio_sfx
	.import		_load_game_progress
	.import		_galaxy_draw_screen
	.import		_galaxy_get_action
	.import		_game_lost
	.import		_game_draw_screen
	.export		_init_new_game
	.export		_init_level
	.export		_level_pass
	.import		_set_game_rules
	.import		_handle_you
	.import		_handle_move
	.import		_handle_interactions
	.export		_is_level_complete
	.export		_clear_preprocess_helper
	.import		_load_level
	.importzp	_local_x
	.importzp	_local_y
	.importzp	_local_index
	.importzp	_local_type
	.importzp	_local_temp1
	.importzp	_local_temp2
	.importzp	_array_index
	.importzp	_array_value
	.import		_game_phase
	.import		_level_number
	.import		_game_progress
	.import		_objects
	.import		_obj_prop
	.import		_rule_exists
	.import		_map
	.import		_preproc_helper
	.import		_helpers
	.import		_last_obj_index
	.import		_map_lookup
	.import		_obj_prop_lookup
	.import		_one_lshift_lookup
	.export		_planet_data
	.export		_galaxy_display_planet
	.export		_galaxy_takeoff
	.export		_complete_level
	.export		_galaxy_check_trigger
	.export		_galaxy_pass
	.export		_current_music
	.export		_level_loop
	.export		_galaxy_loop
	.export		_game_loop
	.export		_main

.segment	"BANKDATA"

_planet_data:
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$10
	.byte	$11
	.byte	$12
	.byte	$08
	.byte	$08
	.byte	$27
	.byte	$13
	.byte	$14
	.byte	$08
	.byte	$08
	.byte	$15
	.byte	$16
	.byte	$17
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$08
_current_music:
	.byte	$FF

; ---------------------------------------------------------------
; void __near__ init_new_game (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_init_new_game: near

.segment	"BANKCODE"

;
; level_number = 0;
;
	lda     #$00
	sta     _level_number
;
; memset(&game_progress, 0, sizeof(game_progress));
;
	ldy     #$0D
L010A:	sta     _game_progress,y
	dey
	bpl     L010A
;
; game_progress.galaxy_x = 0xFF; // position on the galaxy map
;
	lda     #$FF
	sta     _game_progress
;
; game_progress.galaxy_y = 0xFF; // position on the galaxy map
;
	sta     _game_progress+1
;
; game_progress.landed_x = 0xFF; // position on the galaxy map
;
	sta     _game_progress+2
;
; game_progress.landed_y = 0xFF; // position on the galaxy map
;
	sta     _game_progress+3
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ init_level (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_init_level: near

.segment	"BANKCODE"

;
; game_phase = LEVEL_ONGOING;
;
	lda     #$01
	sta     _game_phase
;
; helpers.you_move_at_least_once = false;
;
	lda     #$00
	sta     _helpers+3
;
; helpers.rules_may_have_changed = true;
;
	lda     #$01
	sta     _helpers+4
;
; set_game_rules(); // on the beginning of level and after move of other objects
;
	jsr     _set_game_rules
;
; helpers.rules_may_have_changed = true;
;
	lda     #$01
	sta     _helpers+4
;
; helpers.pick_exists_as_object = false;
;
	lda     #$00
	sta     _helpers
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	sta     _local_index
	tax
L0193:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcs     L0120
;
; ObjPropGet(objects.type[local_index], PROP_PICK, array_value);
;
	ldy     _local_index
	lda     _objects+280,y
	sta     ptr1
	lda     #$00
	clc
	adc     #>(_obj_prop_lookup)
	sta     ptr1+1
	ldy     #<(_obj_prop_lookup)
	lda     (ptr1),y
	sta     _array_index
	lda     #$07
	clc
	adc     _array_index
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
	beq     L0194
;
; helpers.pick_exists_as_object = true;
;
	lda     #$01
	sta     _helpers
;
; break;
;
	rts
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L0194:	inc     _local_index
	jmp     L0193
;
; }
;
L0120:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ level_pass (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_level_pass: near

.segment	"BANKCODE"

;
; game_draw_screen();
;
	jsr     _game_draw_screen
;
; helpers.something_transformed = false;
;
	lda     #$00
	sta     _helpers+7
;
; helpers.something_exploded = false;
;
	sta     _helpers+6
;
; set_game_rules(); // on the beginning of level and after move of other objects
;
	jsr     _set_game_rules
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	lda     #$00
	sta     _local_index
	tax
L0197:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcs     L0199
;
; if (IS_KILLED(local_index))
;
	ldy     _local_index
	lda     _objects+560,y
	and     #$08
;
; continue;
;
	bne     L0198
;
; ObjPropGet(objects.type[local_index], PROP_YOU, array_value);
;
	ldy     _local_index
	lda     _objects+280,y
	sta     ptr1
	lda     #$00
	clc
	adc     #>(_obj_prop_lookup)
	sta     ptr1+1
	ldy     #<(_obj_prop_lookup)
	lda     (ptr1),y
	sta     _array_index
	lda     #$00
	clc
	adc     _array_index
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
;
; break;
;
	bne     L0199
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L0198:	inc     _local_index
	jmp     L0197
;
; if (local_index == last_obj_index)
;
L0199:	lda     _last_obj_index
	cmp     _local_index
	bne     L00E7
;
; game_phase = LEVEL_LOST;
;
	lda     #$03
	sta     _game_phase
;
; return;
;
	rts
;
; handle_you();
;
L00E7:	jsr     _handle_you
;
; set_game_rules(); 
;
	jsr     _set_game_rules
;
; if (rule_exists[PROP_MOVE] || (rule_exists[PROP_MAGNET] && rule_exists[PROP_IRON]))
;
	lda     _rule_exists+9
	bne     L019D
	lda     _rule_exists+14
	beq     L00ED
	lda     _rule_exists+13
	beq     L00ED
;
; handle_move();
;
L019D:	jsr     _handle_move
;
; set_game_rules(); // after move of other objects
;
	jsr     _set_game_rules
;
; handle_interactions();
;
L00ED:	jsr     _handle_interactions
;
; if (helpers.something_transformed)
;
	lda     _helpers+7
	beq     L00F9
;
; audio_sfx(SFX_TRANSFORM); 
;
	lda     #$0D
	jmp     _audio_sfx
;
; else if (helpers.something_exploded)
;
L00F9:	lda     _helpers+6
	beq     L00FE
;
; audio_sfx(SFX_BOOM); // replace with better sound for changing object type?        
;
	lda     #$0B
	jmp     _audio_sfx
;
; }
;
L00FE:	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ is_level_complete (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_is_level_complete: near

.segment	"BANKCODE"

;
; return game_progress.worlds_state[local_temp1] & (one_lshift_lookup[local_temp2]);
;
	ldy     _local_temp1
	lda     _game_progress+6,y
	jsr     pusha0
	lda     _local_temp2
	asl     a
	bcc     L019F
	ldx     #$01
	clc
L019F:	adc     #<(_one_lshift_lookup)
	sta     ptr1
	txa
	adc     #>(_one_lshift_lookup)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosandax
	ldx     #$00
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ clear_preprocess_helper (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_clear_preprocess_helper: near

.segment	"BANKCODE"

;
; memset(&preproc_helper.min_val, 0xFF, sizeof(preproc_helper.min_val));
;
	ldy     #$1F
	lda     #$FF
L0043:	sta     _preproc_helper,y
	dey
	bpl     L0043
;
; memset(&preproc_helper.max_val, 0x0 , sizeof(preproc_helper.max_val));
;
	ldy     #$1F
	lda     #$00
L0049:	sta     _preproc_helper+32,y
	dey
	bpl     L0049
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ galaxy_display_planet (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_galaxy_display_planet: near

.segment	"BANKCODE"

;
; for (local_y = 0; local_y < PLANET_DATA_Y; ++local_y)
;
	lda     #$00
	sta     _local_y
L01A4:	lda     _local_y
	cmp     #$05
	bcc     L01AB
;
; }
;
	rts
;
; for (local_x = 0; local_x < PLANET_DATA_X; ++local_x)
;
L01AB:	lda     #$00
	sta     _local_x
L01A5:	lda     _local_x
	cmp     #$05
	bcs     L01AA
;
; local_type = planet_data[local_y * PLANET_DATA_X + local_x];
;
	ldx     #$00
	lda     _local_y
	jsr     mulax5
	clc
	adc     _local_x
	bcc     L01A0
	inx
L01A0:	sta     ptr1
	txa
	clc
	adc     #>(_planet_data)
	sta     ptr1+1
	ldy     #<(_planet_data)
	lda     (ptr1),y
	sta     _local_type
;
; if (local_type >= DECODE_WALLS_MIN && local_type < DECODE_WALLS_MAX)
;
	cmp     #$08
	bcc     L01A9
	lda     _local_type
	cmp     #$10
	bcs     L01A9
;
; local_type += game_progress.landed_on_world_number;
;
	lda     _game_progress+5
	clc
	adc     _local_type
	sta     _local_type
;
; local_temp1 = game_progress.landed_x + local_x - 1;
;
L01A9:	lda     _game_progress+2
	clc
	adc     _local_x
	sec
	sbc     #$01
	sta     _local_temp1
;
; local_temp2 = game_progress.landed_y + local_y - 2;
;
	lda     _game_progress+3
	clc
	adc     _local_y
	sec
	sbc     #$02
	sta     _local_temp2
;
; MapSet(local_temp1, local_temp2, local_type);
;
	ldy     _local_temp2
	lda     _map_lookup,y
	clc
	adc     _local_temp1
	sta     _array_index
	lda     _local_type
	sta     _array_value
	ldy     _array_index
	lda     _array_value
	sta     _map,y
;
; for (local_x = 0; local_x < PLANET_DATA_X; ++local_x)
;
	inc     _local_x
	jmp     L01A5
;
; for (local_y = 0; local_y < PLANET_DATA_Y; ++local_y)
;
L01AA:	inc     _local_y
	jmp     L01A4

.endproc

; ---------------------------------------------------------------
; void __near__ galaxy_takeoff (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_galaxy_takeoff: near

.segment	"BANKCODE"

;
; load_level();
;
	jsr     _load_level
;
; audio_music(MUSIC_GALAXY);
;
	lda     #$01
	jsr     _audio_music
;
; audio_sfx(SFX_TAKE_OFF);
;
	lda     #$05
	jmp     _audio_sfx

.endproc

; ---------------------------------------------------------------
; void __near__ complete_level (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_complete_level: near

.segment	"BANKCODE"

;
; local_temp1 = level_number / LEVELS_PER_WORLD;
;
	lda     _level_number
	lsr     a
	lsr     a
	lsr     a
	sta     _local_temp1
;
; local_temp2 = level_number % LEVELS_PER_WORLD;
;
	lda     _level_number
	and     #$07
	sta     _local_temp2
;
; if (is_level_complete()==false)
;
	jsr     _is_level_complete
	cmp     #$00
	bne     L0088
;
; game_progress.worlds_state[local_temp1] |= one_lshift_lookup[local_temp2];
;
	lda     #<(_game_progress+6)
	ldx     #>(_game_progress+6)
	clc
	adc     _local_temp1
	bcc     L008C
	inx
L008C:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	lda     _local_temp2
	asl     a
	bcc     L01AD
	ldx     #$01
	clc
L01AD:	adc     #<(_one_lshift_lookup)
	sta     ptr1
	txa
	adc     #>(_one_lshift_lookup)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosorax
	ldy     #$00
	jsr     staspidx
;
; ++game_progress.completed_levels;
;
	inc     _game_progress+4
;
; }
;
L0088:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ galaxy_check_trigger (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_galaxy_check_trigger: near

.segment	"BANKCODE"

;
; MapGet(game_progress.galaxy_x, game_progress.galaxy_y, local_type);
;
	ldy     _game_progress+1
	lda     _map_lookup,y
	clc
	adc     _game_progress
	sta     _array_index
	ldy     _array_index
	lda     _map,y
	sta     _local_type
;
; if (game_phase == GALAXY_TRIGGER)
;
	lda     _game_phase
	cmp     #$08
	bne     L01B4
;
; if (local_type == DECODE_SHUTTLE_LANDED)
;
	lda     _local_type
	cmp     #$27
	bne     L01B0
;
; game_phase = GALAXY_ONGOING;
;
	lda     #$06
	sta     _game_phase
;
; game_progress.landed_on_world_number = SHUTTLE_IN_SPACE;
;
	lda     #$FF
	sta     _game_progress+5
;
; galaxy_takeoff();
;
	jmp     _galaxy_takeoff
;
; else if (local_type >= DECODE_LEVEL_NUMBERS_MIN && local_type < DECODE_LEVEL_NUMBERS_MAX)
;
L01B0:	lda     _local_type
	cmp     #$10
	bcc     L00A5
	cmp     #$18
	bcs     L00A5
;
; local_temp1 = local_type - DECODE_LEVEL_NUMBERS_MIN;
;
	sec
	sbc     #$10
	sta     _local_temp1
;
; level_number = local_temp1 + game_progress.landed_on_world_number * LEVELS_PER_WORLD;
;
	lda     _game_progress+5
	asl     a
	asl     a
	asl     a
	clc
	adc     _local_temp1
	sta     _level_number
;
; game_phase = LEVEL_LOAD;
;
	lda     #$04
	sta     _game_phase
;
; else if (game_phase == GALAXY_ONGOING)
;
L00A5:	rts
L01B4:	lda     _game_phase
	cmp     #$06
	bne     L00B3
;
; if (local_type >= DECODE_WORLDS_MIN && local_type < DECODE_WORLDS_MAX)
;
	lda     _local_type
	cmp     #$08
	bcc     L01B5
	rts
;
; game_progress.landed_on_world_number = local_type - DECODE_WORLDS_MIN;
;
L01B5:	lda     _local_type
	sta     _game_progress+5
;
; game_progress.landed_x = game_progress.galaxy_x;
;
	lda     _game_progress
	sta     _game_progress+2
;
; game_progress.landed_y = game_progress.galaxy_y;
;
	lda     _game_progress+1
	sta     _game_progress+3
;
; audio_sfx(SFX_LANDING);
;
	lda     #$04
	jsr     _audio_sfx
;
; galaxy_display_planet();
;
	jmp     _galaxy_display_planet
;
; }
;
L00B3:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ galaxy_pass (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_galaxy_pass: near

.segment	"BANKCODE"

;
; galaxy_draw_screen();
;
	jsr     _galaxy_draw_screen
;
; galaxy_get_action();
;
	jsr     _galaxy_get_action
;
; galaxy_check_trigger();
;
	jmp     _galaxy_check_trigger

.endproc

; ---------------------------------------------------------------
; void __near__ level_loop (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_level_loop: near

.segment	"BANKDATA"

L013A:
	.res	1,$00

.segment	"BANKCODE"

;
; while (game_phase == LEVEL_LOAD || game_phase == LEVEL_ONGOING)
;
	jmp     L01BC
;
; if (game_phase == LEVEL_LOAD)
;
L01B8:	lda     _game_phase
	cmp     #$04
	bne     L01B9
;
; music_to_play = MUSIC_LEVEL_1 + game_progress.landed_on_world_number % MUSIC_LEVEL_MAX;
;
	lda     _game_progress+5
	jsr     pusha0
	lda     #$03
	jsr     tosumoda0
	clc
	adc     #$02
	sta     L013A
;
; if (music_to_play != current_music)
;
	lda     _current_music
	cmp     L013A
	beq     L0145
;
; audio_music(MUSIC_DISABLED);
;
	lda     #$00
	jsr     _audio_music
;
; load_level();
;
L0145:	jsr     _load_level
;
; init_level();
;
	jsr     _init_level
;
; audio_music(music_to_play);
;
	lda     L013A
	jsr     _audio_music
;
; current_music = music_to_play;
;
	lda     L013A
	sta     _current_music
;
; while (game_phase == LEVEL_ONGOING)
;
	jmp     L01B9
;
; level_pass();
;
L014F:	jsr     _level_pass
;
; while (game_phase == LEVEL_ONGOING)
;
L01B9:	lda     _game_phase
	cmp     #$01
	beq     L014F
;
; if (game_phase == LEVEL_WON)
;
	cmp     #$02
	bne     L01BA
;
; audio_sfx(SFX_LEVEL_WON);
;
	jsr     _audio_sfx
;
; complete_level(); 
;
	jsr     _complete_level
;
; else if (game_phase == LEVEL_LOST)
;
	jmp     L01BC
L01BA:	lda     _game_phase
	cmp     #$03
	bne     L01BC
;
; if (helpers.you_move_at_least_once)
;
	lda     _helpers+3
	beq     L01BB
;
; audio_sfx(SFX_LEVEL_LOST);
;
	lda     #$03
	jsr     _audio_sfx
;
; game_phase = LEVEL_LOAD;
;
	lda     #$04
	sta     _game_phase
;
; game_lost();
;
	jsr     _game_lost
;
; else
;
	jmp     L01BC
;
; game_phase = LEVEL_QUIT;
;
L01BB:	lda     #$05
	sta     _game_phase
;
; while (game_phase == LEVEL_LOAD || game_phase == LEVEL_ONGOING)
;
L01BC:	lda     _game_phase
	cmp     #$04
	beq     L01B8
	cmp     #$01
	beq     L01B8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ galaxy_loop (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_galaxy_loop: near

.segment	"BANKCODE"

;
; level_number = LEVEL_GALAXY;
;
	lda     #$40
	sta     _level_number
;
; load_level();
;
	jsr     _load_level
;
; if (game_progress.landed_on_world_number == SHUTTLE_IN_SPACE || game_phase == GALAXY_ONGOING)
;
	lda     _game_progress+5
	cmp     #$FF
	beq     L01BF
	lda     _game_phase
	cmp     #$06
	bne     L01C0
;
; audio_music(MUSIC_GALAXY);
;
L01BF:	lda     #$01
	jsr     _audio_music
;
; if (game_progress.landed_on_world_number != SHUTTLE_IN_SPACE)
;
L01C0:	lda     _game_progress+5
	cmp     #$FF
	beq     L01C1
;
; galaxy_display_planet();
;
	jsr     _galaxy_display_planet
;
; game_phase = GALAXY_ONGOING;
;
	lda     #$06
	sta     _game_phase
;
; while (game_phase == GALAXY_ONGOING)
;
	jmp     L01C1
;
; galaxy_pass();
;
L0177:	jsr     _galaxy_pass
;
; while (game_phase == GALAXY_ONGOING)
;
L01C1:	lda     _game_phase
	cmp     #$06
	beq     L0177
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_loop (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_game_loop: near

.segment	"BANKCODE"

;
; while (game_phase != GAME_COMPLETED)
;
	jmp     L017F
;
; galaxy_loop();
;
L017D:	jsr     _galaxy_loop
;
; level_loop();
;
	jsr     _level_loop
;
; while (game_phase != GAME_COMPLETED)
;
L017F:	lda     _game_phase
	cmp     #$0A
	bne     L017D
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_main: near

.segment	"BANKCODE"

;
; init_platform();
;
	jsr     _init_platform
;
; game_progress.landed_on_world_number = SHUTTLE_IN_SPACE;
;
	lda     #$FF
	sta     _game_progress+5
;
; if (load_game_progress())
;
	jsr     _load_game_progress
	tax
	beq     L0187
;
; game_phase = GALAXY_ONGOING;
;
	lda     #$06
;
; else
;
	jmp     L01C2
;
; init_new_game();
;
L0187:	jsr     _init_new_game
;
; game_phase = LEVEL_LOAD;
;
	lda     #$04
L01C2:	sta     _game_phase
;
; game_loop();
;
	jsr     _game_loop
;
; audio_music(MUSIC_DISABLED);
;
	lda     #$00
	jsr     _audio_music
;
; return EXIT_SUCCESS;
;
	ldx     #$00
	txa
;
; }
;
	rts

.endproc

