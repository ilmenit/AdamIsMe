;
; File generated by cc65 v 2.18 - Git f75657d
;
	.fopt		compiler,"cc65 v 2.18 - Git f75657d"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_memset
	.import		_audio_sfx
	.export		_handle_move
	.export		_perform_move
	.import		_clear_preprocess_helper
	.importzp	_local_x
	.importzp	_local_y
	.importzp	_local_index
	.importzp	_local_type
	.importzp	_local_flags
	.importzp	_local_temp1
	.importzp	_local_temp2
	.importzp	_map_index
	.importzp	_lookup_index
	.importzp	_array_index
	.importzp	_array_value
	.import		_objects
	.import		_obj_prop
	.import		_obj_is_word
	.import		_rule_exists
	.import		_map
	.import		_preproc_helper
	.import		_helpers
	.import		_last_obj_index
	.import		_move_direction_lookup_x
	.import		_move_direction_lookup_y
	.import		_map_lookup
	.import		_obj_prop_lookup
	.import		_reverted_direction_lookup
	.export		_move_direction
	.export		_preprocess_type
	.export		_check_force
	.export		_pass_info_back
	.export		_apply_force
	.export		_preprocess_move_and_push
	.export		_magnets_end
	.export		_magnet_index
	.export		_magnet_direction
	.export		_preprocess_magnets
	.export		_cast_magnet_rays
	.export		_move_ok_ones

.segment	"BANKDATA"

.segment	"BANKDATA"
_move_direction:
	.res	1,$00
_preprocess_type:
	.res	1,$00
_magnets_end:
	.res	1,$00
_magnet_index:
	.res	140,$00
_magnet_direction:
	.res	140,$00

; ---------------------------------------------------------------
; void __near__ handle_move (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_handle_move: near

.segment	"BANKCODE"

;
; if (rule_exists[PROP_MAGNET] && rule_exists[PROP_IRON])
;
	lda     _rule_exists+14
	beq     L03D5
	lda     _rule_exists+13
	beq     L03D5
;
; preprocess_magnets();
;
	jsr     _preprocess_magnets
;
; move_direction = DIR_RIGHT;
;
L03D5:	lda     #$03
	sta     _move_direction
;
; preprocess_type = PROP_MOVE;
;
	lda     #$09
	sta     _preprocess_type
;
; perform_move();
;
	jsr     _perform_move
;
; move_direction = DIR_UP;
;
	lda     #$02
	sta     _move_direction
;
; perform_move();
;
	jsr     _perform_move
;
; move_direction = DIR_LEFT;
;
	lda     #$01
	sta     _move_direction
;
; perform_move();
;
	jsr     _perform_move
;
; move_direction = DIR_DOWN;
;
	lda     #$00
	sta     _move_direction
;
; perform_move();
;
	jmp     _perform_move

.endproc

; ---------------------------------------------------------------
; void __near__ perform_move (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_perform_move: near

.segment	"BANKCODE"

;
; memset(map, PREPROCESS_NONE, sizeof(map));
;
	ldy     #$00
	tya
L03AD:	sta     _map,y
	iny
	cpy     #$F0
	bne     L03AD
;
; clear_preprocess_helper();
;
	jsr     _clear_preprocess_helper
;
; if (preprocess_type == PROP_MOVE && magnets_end > 0)
;
	lda     _preprocess_type
	cmp     #$09
	bne     L03AF
	lda     _magnets_end
	beq     L03AF
;
; cast_magnet_rays();
;
	jsr     _cast_magnet_rays
;
; preprocess_move_and_push();
;
L03AF:	jsr     _preprocess_move_and_push
;
; if (helpers.something_moving==false) // this one for optimization
;
	lda     _helpers+1
;
; return;
;
	beq     L03BB
;
; apply_force();
;
	jsr     _apply_force
;
; helpers.something_moving = false; // this one for sounds
;
	lda     #$00
	sta     _helpers+1
;
; move_ok_ones();
;
	jsr     _move_ok_ones
;
; if (helpers.something_pushed)
;
	lda     _helpers+2
	beq     L03BB
;
; audio_sfx(SFX_PUSH);
;
	lda     #$0A
	jmp     _audio_sfx
;
; }
;
L03BB:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ check_force (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_check_force: near

.segment	"BANKCODE"

;
; local_type = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_type
;
; if ( local_temp1 & PREPROCESS_MOVING)
;
	lda     _local_temp1
	and     #$01
	beq     L03DD
;
; if ( local_type & PREPROCESS_PUSH && ((local_type & PREPROCESS_FINISH)==0) )
;
	lda     _local_type
	and     #$02
	beq     L03DC
	lda     _local_type
	and     #$08
	bne     L03DC
;
; local_type |= PREPROCESS_MOVING;
;
	lda     _local_type
	ora     #$01
;
; else if ( ! (local_type & PREPROCESS_STOP) )
;
	jmp     L03D8
L03DC:	lda     _local_type
	and     #$04
	bne     L0039
;
; local_type |= PREPROCESS_FINISH;
;
	lda     _local_type
	ora     #$08
;
; else
;
	jmp     L03D8
;
; local_type &= (~PREPROCESS_PUSH);
;
L03DD:	lda     _local_type
	and     #$FD
L03D8:	sta     _local_type
;
; map[map_index] = local_type;
;
L0039:	ldy     _map_index
	lda     _local_type
	sta     _map,y
;
; local_temp1 = local_type;
;
	lda     _local_type
	sta     _local_temp1
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ pass_info_back (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_pass_info_back: near

.segment	"BANKCODE"

;
; local_type = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_type
;
; local_flags = local_type & (PREPROCESS_OPEN | PREPROCESS_SHUT);
;
	and     #$30
	sta     _local_flags
;
; if (local_type & PREPROCESS_OPEN)
;
	lda     _local_type
	and     #$10
	beq     L03DE
;
; if ((local_temp1 & PREPROCESS_SHUT)==0)
;
	lda     _local_temp1
	and     #$20
	bne     L03DE
;
; local_type &= (~PREPROCESS_OPEN);
;
	lda     _local_type
	and     #$EF
	sta     _local_type
;
; if (local_type & PREPROCESS_SHUT)
;
L03DE:	lda     _local_type
	and     #$20
	beq     L03DF
;
; if ((local_temp1 & PREPROCESS_OPEN)==0)
;
	lda     _local_temp1
	and     #$10
	bne     L03DF
;
; local_type &= (~PREPROCESS_SHUT);
;
	lda     _local_type
	and     #$DF
	sta     _local_type
;
; if ( (local_temp1 & PREPROCESS_FINISH) || (local_temp1 & PREPROCESS_MOVE_ACCEPTED) )
;
L03DF:	lda     _local_temp1
	and     #$08
	bne     L03E0
	lda     _local_temp1
	and     #$40
	beq     L005D
;
; if ( local_type & PREPROCESS_MOVING)
;
L03E0:	lda     _local_type
	and     #$01
	beq     L005D
;
; local_type |= PREPROCESS_MOVE_ACCEPTED;
;
	lda     _local_type
	ora     #$40
	sta     _local_type
;
; map[map_index] = local_type;
;
L005D:	ldy     _map_index
	lda     _local_type
	sta     _map,y
;
; local_temp1 = local_type | local_flags;
;
	lda     _local_flags
	ora     _local_type
	sta     _local_temp1
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ apply_force (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_apply_force: near

.segment	"BANKCODE"

;
; switch (move_direction)
;
	lda     _move_direction
;
; }
;
	jeq     L03F4
	cmp     #$01
	beq     L03EB
	cmp     #$02
	jeq     L03F9
	cmp     #$03
	jeq     L03EF
	rts
;
; for (local_y = 0; local_y < MAP_SIZE_Y; ++local_y)
;
L03EB:	lda     #$00
	sta     _local_y
L03EC:	lda     _local_y
	cmp     #$0C
	bcc     L0402
;
; }
;
	rts
;
; if (preproc_helper.min_val.x[local_y] == 0xFF)
;
L0402:	ldy     _local_y
	lda     _preproc_helper,y
	cmp     #$FF
;
; continue;
;
	beq     L03EE
;
; local_x = preproc_helper.max_val.x[local_y];
;
	ldy     _local_y
	lda     _preproc_helper+32,y
	sta     _local_x
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & (~PREPROCESS_PUSH);
;
	and     #$FD
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; --local_x;
;
L03FE:	dec     _local_x
;
; for (; local_x < MAP_SIZE_X; --local_x)
;
	lda     _local_x
	cmp     #$14
	bcs     L0096
;
; --map_index;
;
	dec     _map_index
;
; check_force();
;
	jsr     _check_force
;
; for (; local_x < MAP_SIZE_X; --local_x)
;
	jmp     L03FE
;
; map_index = MapGetIndex(0, local_y);
;
L0096:	ldy     _local_y
	lda     _map_lookup,y
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & ((~PREPROCESS_SHUT) & (~PREPROCESS_OPEN));
;
	and     #$CF
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; for (local_x = 1; local_x < MAP_SIZE_X; ++local_x)
;
	lda     #$01
	sta     _local_x
L03ED:	lda     _local_x
	cmp     #$14
	bcs     L03EE
;
; ++map_index;
;
	inc     _map_index
;
; pass_info_back();
;
	jsr     _pass_info_back
;
; for (local_x = 1; local_x < MAP_SIZE_X; ++local_x)
;
	inc     _local_x
	jmp     L03ED
;
; for (local_y = 0; local_y < MAP_SIZE_Y; ++local_y)
;
L03EE:	inc     _local_y
	jmp     L03EC
;
; for (local_y = 0; local_y < MAP_SIZE_Y; ++local_y)
;
L03EF:	lda     #$00
	sta     _local_y
L03F0:	lda     _local_y
	cmp     #$0C
	bcc     L0403
;
; }
;
	rts
;
; local_x = preproc_helper.min_val.x[local_y];
;
L0403:	ldy     _local_y
	lda     _preproc_helper,y
	sta     _local_x
;
; if (local_x == 0xFF)
;
	cmp     #$FF
;
; continue;
;
	beq     L03F2
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & (~PREPROCESS_PUSH);
;
	and     #$FD
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; ++local_x;
;
L03FF:	inc     _local_x
;
; for (; local_x < MAP_SIZE_X; ++local_x)
;
	lda     _local_x
	cmp     #$14
	bcs     L00DF
;
; ++map_index;
;
	inc     _map_index
;
; check_force();
;
	jsr     _check_force
;
; for (; local_x < MAP_SIZE_X; ++local_x)
;
	jmp     L03FF
;
; map_index = MapGetIndex(MAP_SIZE_X - 1, local_y);
;
L00DF:	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     #$13
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & ((~PREPROCESS_SHUT) & (~PREPROCESS_OPEN));
;
	and     #$CF
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; for (local_x = MAP_SIZE_X - 2; local_x < MAP_SIZE_X; --local_x)
;
	lda     #$12
	sta     _local_x
L03F1:	lda     _local_x
	cmp     #$14
	bcs     L03F2
;
; --map_index;
;
	dec     _map_index
;
; pass_info_back();
;
	jsr     _pass_info_back
;
; for (local_x = MAP_SIZE_X - 2; local_x < MAP_SIZE_X; --local_x)
;
	dec     _local_x
	jmp     L03F1
;
; for (local_y = 0; local_y < MAP_SIZE_Y; ++local_y)
;
L03F2:	inc     _local_y
	jmp     L03F0
;
; for (local_x = 0; local_x < MAP_SIZE_X; ++local_x)
;
L03F4:	sta     _local_x
L03F5:	lda     _local_x
	cmp     #$14
	bcc     L0404
;
; }
;
	rts
;
; local_y = preproc_helper.min_val.y[local_x];
;
L0404:	ldy     _local_x
	lda     _preproc_helper+12,y
	sta     _local_y
;
; if (local_y == 0xFF)
;
	cmp     #$FF
;
; continue;
;
	beq     L03F8
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & (~PREPROCESS_PUSH);
;
	and     #$FD
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; ++local_y;
;
L0400:	inc     _local_y
;
; for (; local_y < MAP_SIZE_Y; ++local_y)
;
	lda     _local_y
	cmp     #$0C
	bcs     L03F6
;
; map_index += MAP_SIZE_X;
;
	lda     #$14
	clc
	adc     _map_index
	sta     _map_index
;
; check_force();
;
	jsr     _check_force
;
; for (; local_y < MAP_SIZE_Y; ++local_y)
;
	jmp     L0400
;
; map_index = MapGetIndex(local_x, MAP_SIZE_Y - 1);
;
L03F6:	lda     _local_x
	clc
	adc     _map_lookup+11
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & ((~PREPROCESS_SHUT) & (~PREPROCESS_OPEN));
;
	and     #$CF
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; for (local_y = MAP_SIZE_Y - 2; local_y < MAP_SIZE_Y; --local_y)
;
	lda     #$0A
	sta     _local_y
L03F7:	lda     _local_y
	cmp     #$0C
	bcs     L03F8
;
; map_index -= MAP_SIZE_X;
;
	lda     _map_index
	sec
	sbc     #$14
	sta     _map_index
;
; pass_info_back();
;
	jsr     _pass_info_back
;
; for (local_y = MAP_SIZE_Y - 2; local_y < MAP_SIZE_Y; --local_y)
;
	dec     _local_y
	jmp     L03F7
;
; for (local_x = 0; local_x < MAP_SIZE_X; ++local_x)
;
L03F8:	inc     _local_x
	jmp     L03F5
;
; for (local_x = 0; local_x < MAP_SIZE_X; ++local_x)
;
L03F9:	lda     #$00
	sta     _local_x
L03FA:	lda     _local_x
	cmp     #$14
	bcc     L0405
;
; }
;
	rts
;
; if (preproc_helper.min_val.y[local_x] == 0xFF)
;
L0405:	ldy     _local_x
	lda     _preproc_helper+12,y
	cmp     #$FF
;
; continue;
;
	jeq     L03FD
;
; local_y = preproc_helper.max_val.y[local_x];
;
	ldy     _local_x
	lda     _preproc_helper+44,y
	sta     _local_y
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & (~PREPROCESS_PUSH);
;
	and     #$FD
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; --local_y;
;
L0401:	dec     _local_y
;
; for (; local_y < MAP_SIZE_Y; --local_y)
;
	lda     _local_y
	cmp     #$0C
	bcs     L03FB
;
; map_index -= MAP_SIZE_X;
;
	lda     _map_index
	sec
	sbc     #$14
	sta     _map_index
;
; check_force();
;
	jsr     _check_force
;
; for (; local_y < MAP_SIZE_Y; --local_y)
;
	jmp     L0401
;
; map_index = MapGetIndex(local_x, 0);
;
L03FB:	lda     _local_x
	clc
	adc     _map_lookup
	sta     _map_index
;
; local_temp1 = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_temp1
;
; array_value = local_temp1 & ((~PREPROCESS_SHUT) & (~PREPROCESS_OPEN));
;
	and     #$CF
	sta     _array_value
;
; map[map_index] = array_value;
;
	ldy     _map_index
	lda     _array_value
	sta     _map,y
;
; for (local_y = 1; local_y < MAP_SIZE_Y; ++local_y)
;
	lda     #$01
	sta     _local_y
L03FC:	lda     _local_y
	cmp     #$0C
	bcs     L03FD
;
; map_index += MAP_SIZE_X;
;
	lda     #$14
	clc
	adc     _map_index
	sta     _map_index
;
; pass_info_back();
;
	jsr     _pass_info_back
;
; for (local_y = 1; local_y < MAP_SIZE_Y; ++local_y)
;
	inc     _local_y
	jmp     L03FC
;
; for (local_x = 0; local_x < MAP_SIZE_X; ++local_x)
;
L03FD:	inc     _local_x
	jmp     L03FA

.endproc

; ---------------------------------------------------------------
; void __near__ preprocess_move_and_push (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_preprocess_move_and_push: near

.segment	"BANKCODE"

;
; helpers.something_moving = false;
;
	lda     #$00
	sta     _helpers+1
;
; helpers.something_pushed = false;
;
	sta     _helpers+2
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	sta     _local_index
	tax
L040B:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcc     L041D
;
; }
;
	rts
;
; if (IS_KILLED(local_index))
;
L041D:	ldy     _local_index
	lda     _objects+560,y
	and     #$08
;
; continue;
;
	jne     L041C
;
; local_type = objects.type[local_index];
;
	ldy     _local_index
	lda     _objects+280,y
	sta     _local_type
;
; local_x = objects.x[local_index];
;
	ldy     _local_index
	lda     _objects,y
	sta     _local_x
;
; local_y = objects.y[local_index];
;
	ldy     _local_index
	lda     _objects+140,y
	sta     _local_y
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; local_flags = map[map_index];
;
	ldy     _map_index
	lda     _map,y
	sta     _local_flags
;
; lookup_index = obj_prop_lookup[local_type];
;
	ldy     _local_type
	lda     _obj_prop_lookup,y
	sta     _lookup_index
;
; ObjPropGetByIndex(lookup_index, PROP_OPEN, array_value);
;
	clc
	adc     #$05
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
	beq     L040C
;
; local_flags |= PREPROCESS_OPEN;
;
	lda     _local_flags
	ora     #$10
	sta     _local_flags
;
; ObjPropGetByIndex(lookup_index, PROP_SHUT, array_value);
;
L040C:	lda     _lookup_index
	clc
	adc     #$06
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
	beq     L040D
;
; local_flags |= PREPROCESS_SHUT;
;
	lda     _local_flags
	ora     #$20
	sta     _local_flags
;
; ObjPropGetByIndex(lookup_index, preprocess_type, local_temp1);
;
L040D:	lda     _lookup_index
	clc
	adc     _preprocess_type
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _local_temp1
;
; ObjPropGetByIndex(lookup_index, PROP_IRON, local_temp2);
;
	lda     _lookup_index
	clc
	adc     #$0D
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _local_temp2
;
; if ( (local_temp1 && (objects.direction[local_index] & (DIR_MASK | DIR_CHANGED) ) == move_direction ) ||
;
	lda     _local_temp1
	beq     L0411
	ldy     _local_index
	lda     _objects+560,y
	and     #$17
	cmp     _move_direction
	beq     L0419
;
; ( (local_flags & PREPROCESS_MAGNET) && local_temp2)
;
L0411:	lda     _local_flags
	and     #$80
	jeq     L041A
	lda     _local_temp2
	jeq     L041A
;
; local_flags |= PREPROCESS_MOVING;
;
L0419:	lda     _local_flags
	ora     #$01
	sta     _local_flags
;
; helpers.something_moving = true;  
;
	lda     #$01
	sta     _helpers+1
;
; SetMinMaxHelper(local_x, local_y); // uses array_index
;
	ldy     _local_y
	lda     _preproc_helper,y
	sta     _array_index
	lda     _local_x
	cmp     _array_index
	txa
	sbc     #$00
	bcs     L0209
	ldy     _local_y
	lda     _local_x
	sta     _preproc_helper,y
L0209:	ldy     _local_y
	lda     _preproc_helper+32,y
	sta     _array_index
	cmp     _local_x
	txa
	sbc     #$00
	bcs     L0213
	ldy     _local_y
	lda     _local_x
	sta     _preproc_helper+32,y
L0213:	ldy     _local_x
	lda     _preproc_helper+12,y
	sta     _array_index
	lda     _local_y
	cmp     _array_index
	txa
	sbc     #$00
	bcs     L021D
	ldy     _local_x
	lda     _local_y
	sta     _preproc_helper+12,y
L021D:	ldy     _local_x
	lda     _preproc_helper+44,y
	sta     _array_index
	cmp     _local_y
	txa
	sbc     #$00
	bcs     L041B
	ldy     _local_x
	lda     _local_y
	sta     _preproc_helper+44,y
;
; else 
;
	jmp     L041B
;
; ObjPropGetByIndex(lookup_index, PROP_PUSH, array_value);
;
L041A:	lda     _lookup_index
	clc
	adc     #$03
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
	beq     L041B
;
; local_flags |= PREPROCESS_PUSH;
;
	lda     _local_flags
	ora     #$02
	sta     _local_flags
;
; ObjPropGetByIndex(lookup_index, PROP_STOP, array_value);
;
L041B:	lda     _lookup_index
	clc
	adc     #$02
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value)
;
	lda     _array_value
	beq     L0244
;
; local_flags |= PREPROCESS_STOP;
;
	lda     _local_flags
	ora     #$04
	sta     _local_flags
;
; map[map_index] = local_flags;
;
L0244:	ldy     _map_index
	lda     _local_flags
	sta     _map,y
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L041C:	inc     _local_index
	jmp     L040B

.endproc

; ---------------------------------------------------------------
; void __near__ preprocess_magnets (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_preprocess_magnets: near

.segment	"BANKCODE"

;
; magnets_end = 0;
;
	lda     #$00
	sta     _magnets_end
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	sta     _local_index
	tax
L041E:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcs     L0252
;
; local_temp1 = objects.type[local_index];
;
	ldy     _local_index
	lda     _objects+280,y
	sta     _local_temp1
;
; ObjPropGet(local_temp1, PROP_MAGNET, array_value);
;
	ldy     _local_temp1
	lda     _obj_prop_lookup,y
	sta     _array_index
	lda     #$0E
	clc
	adc     _array_index
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value==false)
;
	lda     _array_value
;
; continue;
;
	beq     L041F
;
; if (IS_KILLED(local_index))
;
	ldy     _local_index
	lda     _objects+560,y
	and     #$08
;
; continue;
;
	bne     L041F
;
; magnet_index[magnets_end] = local_index;
;
	ldy     _magnets_end
	lda     _local_index
	sta     _magnet_index,y
;
; array_value = objects.direction[local_index] & DIR_MASK;
;
	ldy     _local_index
	lda     _objects+560,y
	and     #$07
	sta     _array_value
;
; magnet_direction[magnets_end] = array_value;
;
	ldy     _magnets_end
	lda     _array_value
	sta     _magnet_direction,y
;
; ++magnets_end;
;
	inc     _magnets_end
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L041F:	inc     _local_index
	jmp     L041E
;
; }
;
L0252:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ cast_magnet_rays (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_cast_magnet_rays: near

.segment	"BANKDATA"

L027E:
	.res	1,$00

.segment	"BANKCODE"

;
; byte reverted_move_direction = reverted_direction_lookup[move_direction];
;
	ldy     _move_direction
	lda     _reverted_direction_lookup,y
	sta     L027E
;
; for (local_temp1 = 0; local_temp1 < magnets_end; ++local_temp1)
;
	lda     #$00
	sta     _local_temp1
	tax
L0422:	lda     _local_temp1
	cmp     _magnets_end
	txa
	sbc     #$00
	bcc     L0428
;
; }
;
	rts
;
; local_flags = magnet_direction[local_temp1];
;
L0428:	ldy     _local_temp1
	lda     _magnet_direction,y
	sta     _local_flags
;
; if (local_flags != reverted_move_direction)
;
	lda     L027E
	cmp     _local_flags
;
; continue;
;
	jne     L0427
;
; local_index = magnet_index[local_temp1];
;
	ldy     _local_temp1
	lda     _magnet_index,y
	sta     _local_index
;
; local_x = objects.x[local_index];
;
	ldy     _local_index
	lda     _objects,y
	sta     _local_x
;
; local_y = objects.y[local_index];
;
	ldy     _local_index
	lda     _objects+140,y
	sta     _local_y
;
; map_index = MapGetIndex(local_x, local_y);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _map_index
;
; switch (local_flags)
;
	lda     _local_flags
;
; }
;
	beq     L0423
	cmp     #$01
	beq     L0424
	cmp     #$02
	beq     L0426
	cmp     #$03
	beq     L0425
	jmp     L0427
;
; ++local_y;
;
L0423:	inc     _local_y
;
; map_index += MAP_SIZE_X;
;
	lda     #$14
	clc
	adc     _map_index
	sta     _map_index
;
; if (local_y >= MAP_SIZE_Y)
;
	lda     _local_y
	cmp     #$0C
;
; break;
;
	bcs     L0427
;
; map[map_index] = PREPROCESS_MAGNET;
;
	ldy     _map_index
	lda     #$80
	sta     _map,y
;
; }
;
	jmp     L0423
;
; --local_x;
;
L0424:	dec     _local_x
;
; --map_index;
;
	dec     _map_index
;
; if (local_x >= MAP_SIZE_X)
;
	lda     _local_x
	cmp     #$14
;
; break;
;
	bcs     L0427
;
; map[map_index] = PREPROCESS_MAGNET;
;
	ldy     _map_index
	lda     #$80
	sta     _map,y
;
; }
;
	jmp     L0424
;
; ++local_x;
;
L0425:	inc     _local_x
;
; ++map_index;
;
	inc     _map_index
;
; if (local_x >= MAP_SIZE_X)
;
	lda     _local_x
	cmp     #$14
;
; break;
;
	bcs     L0427
;
; map[map_index] = PREPROCESS_MAGNET;
;
	ldy     _map_index
	lda     #$80
	sta     _map,y
;
; }
;
	jmp     L0425
;
; --local_y;
;
L0426:	dec     _local_y
;
; map_index -= MAP_SIZE_X;
;
	lda     _map_index
	sec
	sbc     #$14
	sta     _map_index
;
; if (local_y >= MAP_SIZE_Y)
;
	lda     _local_y
	cmp     #$0C
;
; break;
;
	bcs     L0427
;
; map[map_index] = PREPROCESS_MAGNET;
;
	ldy     _map_index
	lda     #$80
	sta     _map,y
;
; }
;
	jmp     L0426
;
; for (local_temp1 = 0; local_temp1 < magnets_end; ++local_temp1)
;
L0427:	inc     _local_temp1
	jmp     L0422

.endproc

; ---------------------------------------------------------------
; void __near__ move_ok_ones (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_move_ok_ones: near

.segment	"BANKDATA"

L02E1:
	.res	1,$00
L02E2:
	.res	1,$00

.segment	"BANKCODE"

;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	lda     #$00
	sta     _local_index
	tax
L0434:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcc     L045E
;
; }
;
	rts
;
; local_type = objects.type[local_index];
;
L045E:	ldy     _local_index
	lda     _objects+280,y
	sta     _local_type
;
; lookup_index = obj_prop_lookup[local_type];
;
	ldy     _local_type
	lda     _obj_prop_lookup,y
	sta     _lookup_index
;
; ObjPropGetByIndex(lookup_index, PROP_IRON, array_value);
;
	clc
	adc     #$0D
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; ObjPropGetByIndex(lookup_index, PROP_PUSH, prop1);
;
	lda     _lookup_index
	clc
	adc     #$03
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     L02E1
;
; ObjPropGetByIndex(lookup_index, preprocess_type, prop2);
;
	lda     _lookup_index
	clc
	adc     _preprocess_type
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     L02E2
;
; if (array_value == 0 && prop1 == 0 && prop2 == 0)
;
	lda     _array_value
	bne     L030D
	lda     L02E1
	bne     L030D
	lda     L02E2
	jeq     L045C
;
; if (IS_KILLED(local_index))
;
L030D:	ldy     _local_index
	lda     _objects+560,y
	and     #$08
;
; continue;
;
	jne     L045C
;
; local_x = objects.x[local_index];
;
	ldy     _local_index
	lda     _objects,y
	sta     _local_x
;
; local_y = objects.y[local_index];
;
	ldy     _local_index
	lda     _objects+140,y
	sta     _local_y
;
; MapGet(local_x, local_y, local_temp1);
;
	ldy     _local_y
	lda     _map_lookup,y
	clc
	adc     _local_x
	sta     _array_index
	ldy     _array_index
	lda     _map,y
	sta     _local_temp1
;
; (local_temp1 & PREPROCESS_MAGNET) && array_value ||
;
	and     #$80
	beq     L0437
	lda     _array_value
	bne     L043F
;
; (local_temp1 & PREPROCESS_PUSH) && prop1 ||
;
L0437:	lda     _local_temp1
	and     #$02
	beq     L042F
	lda     L02E1
	bne     L043F
	bne     L043F
;
; ( prop2 && ( (objects.direction[local_index] & DIR_MASK) == move_direction) )
;
L042F:	lda     L02E2
	jeq     L045C
	ldy     _local_index
	lda     _objects+560,y
	and     #$07
	cmp     _move_direction
	jne     L045C
;
; ObjPropGetByIndex(lookup_index, PROP_OPEN, array_value);
;
L043F:	lda     _lookup_index
	clc
	adc     #$05
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; ObjPropGetByIndex(lookup_index, PROP_SHUT, prop1);
;
	lda     _lookup_index
	clc
	adc     #$06
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     L02E1
;
; local_temp1 & PREPROCESS_MOVE_ACCEPTED ||
;
	lda     _local_temp1
	and     #$40
	bne     L0453
;
; (local_temp1 & PREPROCESS_MOVING &&
;
	lda     _local_temp1
	and     #$01
	jeq     L0458
;
; ((local_temp1 & PREPROCESS_OPEN) && array_value) ||
;
	lda     _local_temp1
	and     #$10
	beq     L0443
	lda     _array_value
	bne     L0453
;
; ((local_temp1 & PREPROCESS_SHUT) && prop1)
;
L0443:	lda     _local_temp1
	and     #$20
	jeq     L0458
	lda     L02E1
	jeq     L0458
;
; if (local_type == TYPE_TEXT || obj_is_word[local_type])
;
L0453:	lda     _local_type
	cmp     #$0F
	beq     L0454
	ldy     _local_type
	lda     _obj_is_word,y
	beq     L0359
;
; helpers.rules_may_have_changed = true;
;
L0454:	lda     #$01
	sta     _helpers+4
;
; array_value = move_direction_lookup_x[move_direction];
;
L0359:	ldy     _move_direction
	lda     _move_direction_lookup_x,y
	sta     _array_value
;
; objects.x[local_index] += array_value;
;
	lda     #<(_objects)
	ldx     #>(_objects)
	clc
	adc     _local_index
	bcc     L0366
	inx
L0366:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     _array_value
	jsr     staspidx
;
; array_value = move_direction_lookup_y[move_direction];
;
	ldy     _move_direction
	lda     _move_direction_lookup_y,y
	sta     _array_value
;
; objects.y[local_index] += array_value;
;
	lda     #<(_objects+140)
	ldx     #>(_objects+140)
	clc
	adc     _local_index
	bcc     L036E
	inx
L036E:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	clc
	adc     _array_value
	jsr     staspidx
;
; objects.direction[local_index] = move_direction;
;
	ldy     _local_index
	lda     _move_direction
	sta     _objects+560,y
;
; helpers.something_moving = true;
;
	lda     #$01
	sta     _helpers+1
;
; ObjPropGetByIndex(lookup_index, PROP_PUSH, array_value);
;
	lda     _lookup_index
	clc
	adc     #$03
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if ((local_temp1 & PREPROCESS_PUSH) && array_value)
;
	lda     _local_temp1
	ldx     #$00
	and     #$02
	beq     L045C
	lda     _array_value
	beq     L045C
;
; helpers.something_pushed = true;
;
	lda     #$01
	sta     _helpers+2
;
; else
;
	jmp     L045C
;
; ObjPropGetByIndex(lookup_index, preprocess_type, array_value);
;
L0458:	lda     _lookup_index
	clc
	adc     _preprocess_type
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; ObjPropGetByIndex(lookup_index, PROP_YOU, prop1);
;
	lda     _lookup_index
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     L02E1
;
; if (array_value && move_direction == (objects.direction[local_index] & DIR_MASK) && prop1 == false)
;
	lda     _array_value
	beq     L045C
	lda     _move_direction
	jsr     pushax
	ldy     _local_index
	lda     _objects+560,y
	and     #$07
	jsr     tosicmp
	bne     L045D
	lda     L02E1
	bne     L045D
;
; array_value = reverted_direction_lookup[objects.direction[local_index] & DIR_MASK] | DIR_CHANGED;
;
	ldy     _local_index
	lda     _objects+560,y
	and     #$07
	sta     ptr1
	lda     #$00
	clc
	adc     #>(_reverted_direction_lookup)
	sta     ptr1+1
	ldy     #<(_reverted_direction_lookup)
	lda     (ptr1),y
	ora     #$10
	sta     _array_value
;
; objects.direction[local_index] = array_value;
;
	ldy     _local_index
	lda     _array_value
	sta     _objects+560,y
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L045D:	ldx     #$00
L045C:	inc     _local_index
	jmp     L0434

.endproc

