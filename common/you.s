;
; File generated by cc65 v 2.18 - Git f75657d
;
	.fopt		compiler,"cc65 v 2.18 - Git f75657d"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_audio_sfx
	.import		_game_get_action
	.export		_handle_you
	.import		_perform_move
	.importzp	_local_index
	.importzp	_local_temp1
	.importzp	_array_index
	.importzp	_array_value
	.import		_you_move_direction
	.import		_objects
	.import		_obj_prop
	.import		_helpers
	.import		_last_obj_index
	.import		_obj_prop_lookup
	.import		_move_direction
	.import		_preprocess_type

; ---------------------------------------------------------------
; void __near__ handle_you (void)
; ---------------------------------------------------------------

.segment	"BANKCODE"

.proc	_handle_you: near

.segment	"BANKCODE"

;
; game_get_action();
;
	jsr     _game_get_action
;
; if (you_move_direction != DIR_NONE)
;
	lda     _you_move_direction
	cmp     #$04
	beq     L0051
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
	lda     #$00
	sta     _local_index
	tax
L0057:	lda     _local_index
	cmp     _last_obj_index
	txa
	sbc     #$00
	bcs     L005C
;
; local_temp1 = objects.type[local_index];
;
	ldy     _local_index
	lda     _objects+280,y
	sta     _local_temp1
;
; ObjPropGet(local_temp1, PROP_YOU, array_value);
;
	ldy     _local_temp1
	lda     _obj_prop_lookup,y
	sta     _array_index
	lda     #$00
	clc
	adc     _array_index
	sta     _array_index
	ldy     _array_index
	lda     _obj_prop,y
	sta     _array_value
;
; if (array_value && (IS_KILLED(local_index)==false) )
;
	lda     _array_value
	beq     L005B
	ldy     _local_index
	lda     _objects+560,y
	and     #$08
	bne     L005B
;
; objects.direction[local_index] = you_move_direction;
;
	ldy     _local_index
	lda     _you_move_direction
	sta     _objects+560,y
;
; for (local_index = 0; local_index < last_obj_index; ++local_index)
;
L005B:	inc     _local_index
	jmp     L0057
;
; move_direction = you_move_direction;
;
L005C:	lda     _you_move_direction
	sta     _move_direction
;
; preprocess_type = PROP_YOU;
;
	lda     #$00
	sta     _preprocess_type
;
; perform_move();
;
	jsr     _perform_move
;
; if (helpers.something_moving && !helpers.something_pushed)
;
	lda     _helpers+1
	beq     L0053
	lda     _helpers+2
	beq     L0052
L0053:	rts
;
; audio_sfx(SFX_YOU_MOVE);
;
L0052:	lda     #$06
	jmp     _audio_sfx
;
; }
;
L0051:	rts

.endproc

